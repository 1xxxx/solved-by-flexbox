{"version":3,"sources":["node_modules/browser-pack/_prelude.js","main.js","assets/javascript/main.js","assets/javascript/analytics.js","assets/javascript/supports.js","node_modules/autotrack/lib/constants.js","node_modules/autotrack/lib/plugins/clean-url-tracker.js","node_modules/autotrack/lib/plugins/event-tracker.js","node_modules/autotrack/lib/plugins/media-query-tracker.js","node_modules/autotrack/lib/plugins/outbound-link-tracker.js","node_modules/autotrack/lib/plugins/page-visibility-tracker.js","node_modules/autotrack/lib/plugins/social-widget-tracker.js","node_modules/autotrack/lib/provide.js","node_modules/autotrack/lib/usage.js","node_modules/autotrack/lib/utilities.js","node_modules/autotrack/node_modules/object-assign/index.js","node_modules/date-now/index.js","node_modules/debounce/index.js","node_modules/dom-utils/lib/closest.js","node_modules/dom-utils/lib/delegate.js","node_modules/dom-utils/lib/get-attributes.js","node_modules/dom-utils/lib/matches.js","node_modules/dom-utils/lib/parents.js","node_modules/dom-utils/lib/parse-url.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequire","obj","__esModule","supports","flexbox","div","document","createElement","className","innerHTML","body","insertBefore","firstChild","./analytics","./supports","2","requirePlugins","ga","stripQuery","queryDimensionIndex","getDefinitionIndex","dimensions","URL_QUERY_PARAMS","indexFilename","trailingSlash","definitions","name","dimensionIndex","items","media","fieldsObj","_defineProperty","nonInteraction","HIT_SOURCE","hitFilter","model","set","METRIC_VALUE","String","get","trackClientId","tracker","clientId","CLIENT_ID","sendInitialPageview","dimension","slice","key","value","Object","defineProperty","enumerable","configurable","writable","BREAKPOINT","RESOLUTION","ORIENTATION","window","onload","autotrack/lib/plugins/clean-url-tracker","autotrack/lib/plugins/event-tracker","autotrack/lib/plugins/media-query-tracker","autotrack/lib/plugins/outbound-link-tracker","autotrack/lib/plugins/page-visibility-tracker","autotrack/lib/plugins/social-widget-tracker","3","style","4","VERSION","DEV_ID","VERSION_PARAM","USAGE_PARAM","NULL_DIMENSION","5","CleanUrlTracker","opts","usage","track","plugins","CLEAN_URL_TRACKER","this","assign","overrideTrackerBuildHitTask","parseUrl","constants","provide","prototype","cleanUrlTask","location","page","url","oldPath","pathname","newPath","parts","split","join","replace","isFilename","test","substr","query","search","originalTrackerBuildHitTask","bind","remove","originalTrackerSendHitTask","../constants","../provide","../usage","dom-utils/lib/parse-url","object-assign","6","EventTracker","EVENT_TRACKER","addEventListener","events","attributePrefix","handleEvents","selector","delegates","forEach","event","delegate","deep","useCapture","createFieldsObj","getAttributeFields","element","prefix","type","getAttribute","defaultFields","transport","attributeFields","userFields","hitType","send","keys","destroy","../utilities","dom-utils/lib/delegate","7","MediaQueryTracker","MEDIA_QUERY_TRACKER","matchMedia","changeTemplate","changeTimeout","isObject","toArray","changeListeners","processMediaQueries","getMediaListener","mediaMap","debounce","definition","mediaName","getMatchName","addChangeListeners","match","item","matches","mql","fn","handleChanges","addListener","push","newValue","oldValue","eventCategory","eventAction","eventLabel","listener","removeListener","8","OutboundLinkTracker","OUTBOUND_LINK_TRACKER","linkSelector","shouldTrackOutboundLink","handleLinkInteractions","link","navigator","sendBeacon","target","href","hostname","protocol","9","PageVisibilityTracker","PAGE_VISIBILITY_TRACKER","sessionTimeout","DEFAULT_SESSION_TIMEOUT","hiddenMetricIndex","visibleMetricIndex","visibilityState","lastVisibilityChangeTime","Date","handleVisibilityStateChange","overrideTrackerSendMethod","overrideTrackerSendHitTask","prevVisibilityState","sessionHasTimedOut","timeDeltaInSeconds","Math","round","eventValue","metric","minutesSinceLastHit","lastHitTime","originalTrackerSendMethod","args","Array","arguments","firstArg","isPageview","apply","removeEventListener","10","SocialWidgetTracker","SOCIAL_WIDGET_TRACKER","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","readyState","FB","addFacebookEventHandlers","twttr","ready","err","removeTwitterEventHandlers","unbind","Event","subscribe","removeFacebookEventHandlers","unsubscribe","region","data","socialNetwork","socialAction","socialTarget","screenName","screen_name","11","utilities","gaDevIds","pluginName","pluginConstructor","gaAlias","gaplugins","capitalize","./constants","./utilities","12","convertHexToBin","hex","parseInt","toString","convertBinToHex","bin","padZeros","str","len","toAdd","flipBitOn","index","trackPlugin","pluginIndex","usageHex","usageBin","PLUGIN_COUNT","trackVersion","IMPRESSION_TRACKER","OUTBOUND_FORM_TRACKER","URL_CHANGE_TRACKER","plugin","13","getAttributes","opt_tracker","opt_hitFilter","opt_target","originalBuildHitTask","buildHitTask","attributes","attribute","indexOf","field","camelCase","domReady","callback","withTimeout","wait","called","setTimeout","p1","toUpperCase","charAt","isArray","dom-utils/lib/get-attributes","14","toObject","val","undefined","TypeError","shouldUseNative","test1","getOwnPropertyNames","test2","fromCharCode","order2","map","test3","letter","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","source","from","symbols","to","getOwnPropertySymbols","15","now","getTime","16","func","immediate","later","last","timestamp","timeout","result","context","callNow","date-now","17","parents","shouldCheckSelf","nodeType","parent","parentElements","concat","./matches","./parents","18","closest","ancestor","eventType","deepPath","node","path","delegateTarget","./closest","19","attrs","attr","20","matchesSelector","nativeMatches","nodes","parentNode","querySelectorAll","proto","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","21","list","22","HTTP_PORT","HTTPS_PORT","DEFAULT_PORT","RegExp","cache","port","host","origin","hash","fragment"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCCA,YAEA,IAAIK,GAAkB,SAAUC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,EAAI,WAAaA,EAEvFZ,GCLO,cDOP,ICNOc,GAAQH,EAAAX,EAAM,cAIrB,KAAKc,EAASC,UAAW,CACvB,GAAIC,GAAMC,SAASC,cAAc,MACjCF,GAAIG,UAAY,QAChBH,EAAII,UAAS,4GAGbH,SAASI,KAAKC,aAAaN,EAAKC,SAASI,KAAKE,eDO7CC,cAAc,EAAEC,aAAa,IAAIC,GAAG,SAAS1B,EAAQU,EAAOJ,GAC/D,YEsBA,SAASqB,KACPC,GAAG,UAAW,mBACZC,YAAY,EACZC,oBAAqBC,EAAmBC,EAAWC,kBACnDC,cAAe,aACfC,cAAe,QAEjBP,GAAG,UAAW,gBACdA,GAAG,UAAW,qBACZQ,cAEIC,KAAM,aACNC,eAAgB,EAChBC,QACGF,KAAM,KAAMG,MAAO,QACnBH,KAAM,KAAMG,MAAO,uBACnBH,KAAM,KAAMG,MAAO,uBACnBH,KAAM,KAAMG,MAAO,yBAItBH,KAAM,aACNC,eAAgB,EAChBC,QACGF,KAAM,KAAQG,MAAO,QACrBH,KAAM,OAAQG,MAAO,oEAErBH,KAAM,KAAQG,MAAO,oEAKxBH,KAAM,cACNC,eAAgB,EAChBC,QACGF,KAAM,YAAaG,MAAO,6BAC1BH,KAAM,WAAaG,MAAO,gCAKnCZ,GAAG,UAAW,uBACdA,GAAG,UAAW,yBACZa,UAASC,GACPC,eAAgB,MACfX,EAAWY,WAAa,yBAE3BC,UAAW,SAASC,GAClBA,EAAMC,IAAIf,EAAWgB,aAAcC,OAAOH,EAAMI,IAAI,gBAAgB,MAGxEtB,GAAG,UAAW,uBAIhB,QAASuB,KACPvB,GAAG,SAASwB,GACV,GAAIC,GAAWD,EAAQF,IAAI,WAC3BE,GAAQL,IAAIf,EAAWsB,UAAWD,KAKtC,QAASE,KACP3B,GAAG,OAAQ,WAAUc,KAAIV,EAAWY,WAAa,aAKnD,QAASb,GAAmByB,GAC1B,OAAQA,EAAUC,MAAM,IF1F1B,GAAIf,GAAkB,SAAU9B,EAAK8C,EAAKC,GAAS,MAAOC,QAAOC,eAAejD,EAAK8C,GAAOC,MAAOA,EAAOG,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAE1JhE,GEvBO,2CFyBPA,EExBO,uCF0BPA,EEzBO,6CF2BPA,EE1BO,+CF4BPA,EE3BO,iDF6BPA,EE5BO,8CAMP,IAMMgC,IACJiC,WAAY,aACZC,WAAY,aACZC,YAAa,aACbvB,WAAY,aACZX,iBAAkB,aAClBe,aAAc,aACdM,UAAW,aAIb1B,IAAG,SAAU,gBAAiB,QAK9BwC,OAAOC,OAAS,WACd1C,IACAwB,IACAI,OF6ECe,0CAA0C,EAAEC,sCAAsC,EAAEC,4CAA4C,EAAEC,8CAA8C,EAAEC,gDAAgD,EAAEC,8CAA8C,KAAKC,GAAG,SAAS5E,EAAQU,EAAOJ,GACrT,YGlHA,IAAIQ,MACA+D,EAAQ5D,SAASI,KAAKwD,KHsH1BnE,GAAOJ,SGnHLS,QAAS,WACP,MAAOD,GAASC,UAAYD,EAASC,QAAW,aAAe8D,IAC3D,eAAiBA,IAAS,sBAAwBA,WHuHpDC,GAAG,SAAS9E,EAAQU,EAAOJ,GI5GjCI,EAAAJ,SACAyE,QAAA,QACAC,OAAA,SAEAC,cAAA,OACAC,YAAA,OAEAC,eAAA,kBJiIMC,GAAG,SAASpF,EAAQU,EAAOJ,GKxHjC,QAAA+E,GAAAjC,EAAAkC,GAEAC,EAAAC,MAAApC,EAAAmC,EAAAE,QAAAC,mBAEAC,KAAAL,KAAAM,GACA/D,YAAA,EACAC,oBAAA,KACAI,cAAA,KACAC,cAAA,MACAmD,GAEAK,KAAAvC,QAAAA,EAEAuC,KAAAE,8BA7BA,GAAAD,GAAA5F,EAAA,iBACA8F,EAAA9F,EAAA,2BACA+F,EAAA/F,EAAA,gBACAgG,EAAAhG,EAAA,cACAuF,EAAAvF,EAAA,WAiCAqF,GAAAY,UAAAC,aAAA,SAAApD,GAEA,GAAAqD,GAAArD,EAAAI,IAAA,YACAkD,EAAAtD,EAAAI,IAAA,QACAmD,EAAAP,EAAAM,GAAAD,GAEAG,EAAAD,EAAAE,SACAC,EAAAF,CAIA,IAAAX,KAAAL,KAAApD,cAAA,CACA,GAAAuE,GAAAD,EAAAE,MAAA,IACAf,MAAAL,KAAApD,eAAAuE,EAAAA,EAAAjG,OAAA,KACAiG,EAAAA,EAAAjG,OAAA,GAAA,GACAgG,EAAAC,EAAAE,KAAA,MAOA,GAAA,UAAAhB,KAAAL,KAAAnD,cACAqE,EAAAA,EAAAI,QAAA,OAAA,QAEA,IAAA,OAAAjB,KAAAL,KAAAnD,cAAA,CACA,GAAA0E,GAAA,SAAAC,KAAAN,EACAK,IAAA,KAAAL,EAAAO,OAAA,MACAP,GAAA,KAOAb,KAAAL,KAAAzD,YAAA8D,KAAAL,KAAAxD,qBACAgB,EAAAC,IAAA,YAAA4C,KAAAL,KAAAxD,oBACAuE,EAAAW,OAAAjB,EAAAZ,gBAGArC,EAAAC,IAAA,OAAAyD,GAAAb,KAAAL,KAAAzD,WAAA,GAAAwE,EAAAY,UAQA5B,EAAAY,UAAAJ,4BAAA,WACAF,KAAAuB,4BAAAvB,KAAAvC,QAAAF,IAAA,gBAEAyC,KAAAvC,QAAAL,IAAA,eAAA,SAAAD,GACA6C,KAAAO,aAAApD,GACA6C,KAAAuB,4BAAApE,IACAqE,KAAAxB,QAOAN,EAAAY,UAAAmB,OAAA,WACAzB,KAAAvC,QAAAL,IAAA,cAAA4C,KAAA0B,6BAIArB,EAAA,kBAAAX,KL4JGiC,eAAe,EAAEC,aAAa,GAAGC,WAAW,GAAGC,0BAA0B,GAAGC,gBAAgB,KAAKC,GAAG,SAAS3H,EAAQU,EAAOJ,GMrP/H,QAAAsH,GAAAxE,EAAAkC,GAKA,GAHAC,EAAAC,MAAApC,EAAAmC,EAAAE,QAAAoC,eAGAzD,OAAA0D,iBAAA,CAEAnC,KAAAL,KAAAM,GACAmC,QAAA,SACAtF,aACAuF,gBAAA,MACAnF,UAAA,MACAyC,GAEAK,KAAAvC,QAAAA,EAGAuC,KAAAsC,aAAAtC,KAAAsC,aAAAd,KAAAxB,KAEA,IAAAuC,GAAA,IAAAvC,KAAAL,KAAA0C,gBAAA,KAGArC,MAAAwC,aACAxC,KAAAL,KAAAyC,OAAAK,QAAA,SAAAC,GACA1C,KAAAwC,UAAAE,GAAAC,EAAArH,SAAAoH,EAAAH,EACAvC,KAAAsC,cAAAM,MAAA,EAAAC,YAAA,KACArB,KAAAxB,QAxCA,GAAAC,GAAA5F,EAAA,iBACAsI,EAAAtI,EAAA,0BACAgG,EAAAhG,EAAA,cACAuF,EAAAvF,EAAA,YACAyI,EAAAzI,EAAA,gBAAAyI,gBACAC,EAAA1I,EAAA,gBAAA0I,kBA4CAd,GAAA3B,UAAAgC,aAAA,SAAAI,EAAAM,GAEA,GAAAC,GAAAjD,KAAAL,KAAA0C,eAGA,IAAAK,EAAAQ,MAAAF,EAAAG,aAAAF,EAAA,MAAA,CAEA,GAAAG,IAAAC,UAAA,UACAC,EAAAP,EAAAC,EAAAC,GACAM,EAAAtD,KAAAD,KAAAL,KAAA7C,UAAAwG,GACAE,EAAAF,EAAAE,SAAA,OAEAxD,MAAAvC,QAAAgG,KAAAD,EAAAV,EACAM,EAAAG,EAAAvD,KAAAvC,QAAAuC,KAAAL,KAAAzC,UAAA8F,MAOAf,EAAA3B,UAAAmB,OAAA,WACAxD,OAAAyF,KAAA1D,KAAAwC,WAAAC,QAAA,SAAA1E,GACAiC,KAAAwC,UAAAzE,GAAA4F,WACAnC,KAAAxB,QAIAK,EAAA,eAAA4B,KNuRGL,aAAa,GAAGC,WAAW,GAAG+B,eAAe,GAAGC,yBAAyB,GAAG9B,gBAAgB,KAAK+B,GAAG,SAASzJ,EAAQU,EAAOJ,GO7U/H,QAAAoJ,GAAAtG,EAAAkC,GAEAC,EAAAC,MAAApC,EAAAmC,EAAAE,QAAAkE,qBAGAvF,OAAAwF,aAEAjE,KAAAL,KAAAM,GACAxD,YAAA,KACAyH,eAAAlE,KAAAkE,eACAC,cAAA,IACArH,aACAI,UAAA,MACAyC,GAGAyE,EAAApE,KAAAL,KAAAlD,eAEAuD,KAAAL,KAAAlD,YAAA4H,EAAArE,KAAAL,KAAAlD,aACAuD,KAAAvC,QAAAA,EACAuC,KAAAsE,mBAEAtE,KAAAuE,wBA+GA,QAAAC,GAAA3H,GAEA,MAAA4H,GAAA5H,GAAA4H,EAAA5H,IAEA4H,EAAA5H,GAAA4B,OAAAwF,WAAApH,GACA4H,EAAA5H,IAhKA,GAAAoD,GAAA5F,EAAA,iBACAqK,EAAArK,EAAA,YACA+F,EAAA/F,EAAA,gBACAgG,EAAAhG,EAAA,cACAuF,EAAAvF,EAAA,YACAyI,EAAAzI,EAAA,gBAAAyI,gBACAsB,EAAA/J,EAAA,gBAAA+J,SACAC,EAAAhK,EAAA,gBAAAgK,QAMAI,IAuCAV,GAAAzD,UAAAiE,oBAAA,WACAvE,KAAAL,KAAAlD,YAAAgG,QAAA,SAAAkC,GAEA,GAAAA,EAAAjI,MAAAiI,EAAAhI,eAAA,CACA,GAAAiI,GAAA5E,KAAA6E,aAAAF,EACA3E,MAAAvC,QAAAL,IAAA,YAAAuH,EAAAhI,eAAAiI,GAEA5E,KAAA8E,mBAAAH,KAEAnD,KAAAxB,QAWA+D,EAAAzD,UAAAuE,aAAA,SAAAF,GACA,GAAAI,EAOA,OALAJ,GAAA/H,MAAA6F,QAAA,SAAAuC,GACAR,EAAAQ,EAAAnI,OAAAoI,UACAF,EAAAC,KAGAD,EAAAA,EAAArI,KAAA0D,EAAAZ,gBAUAuE,EAAAzD,UAAAwE,mBAAA,SAAAH,GACAA,EAAA/H,MAAA6F,QAAA,SAAAuC,GACA,GAAAE,GAAAV,EAAAQ,EAAAnI,OACAsI,EAAAT,EAAA,WACA1E,KAAAoF,cAAAT,IACAnD,KAAAxB,MAAAA,KAAAL,KAAAwE,cAEAe,GAAAG,YAAAF,GACAnF,KAAAsE,gBAAAgB,MAAAJ,IAAAA,EAAAC,GAAAA,KACA3D,KAAAxB,QAUA+D,EAAAzD,UAAA8E,cAAA,SAAAT,GACA,GAAAY,GAAAvF,KAAA6E,aAAAF,GACAa,EAAAxF,KAAAvC,QAAAF,IAAA,YAAAoH,EAAAhI,eAEA,IAAA4I,IAAAC,EAAA,CACAxF,KAAAvC,QAAAL,IAAA,YAAAuH,EAAAhI,eAAA4I,EAEA,IAAAnC,IACAqC,cAAAd,EAAAjI,KACAgJ,YAAA,SACAC,WAAA3F,KAAAL,KAAAuE,eAAAsB,EAAAD,GAEAvF,MAAAvC,QAAAgG,KAAA,QAAAX,EACAM,EAAApD,KAAAL,KAAA7C,UAAAkD,KAAAvC,QAAAuC,KAAAL,KAAAzC,cAQA6G,EAAAzD,UAAAmB,OAAA,WACA,IAAA,GAAAmE,GAAAtL,EAAA,EAAAsL,EAAA5F,KAAAsE,gBAAAhK,GAAAA,IACAsL,EAAAV,IAAAW,eAAAD,EAAAT,KAYApB,EAAAzD,UAAA4D,eAAA,SAAAsB,EAAAD,GACA,MAAAC,GAAA,OAAAD,GAmBAlF,EAAA,oBAAA0D,KPuXGpC,eAAe,EAAEC,aAAa,GAAGC,WAAW,GAAG+B,eAAe,GAAGc,SAAW,GAAG3C,gBAAgB,KAAK+D,GAAG,SAASzL,EAAQU,EAAOJ,GQ5gBlI,QAAAoL,GAAAtI,EAAAkC,GAEAC,EAAAC,MAAApC,EAAAmC,EAAAE,QAAAkG,uBAGAvH,OAAA0D,mBAEAnC,KAAAL,KAAAM,GACAmC,QAAA,SACA6D,aAAA,IACAC,wBAAAlG,KAAAkG,wBACApJ,aACAuF,gBAAA,MACAnF,UAAA,MACAyC,GAEAK,KAAAvC,QAAAA,EAGAuC,KAAAmG,uBAAAnG,KAAAmG,uBAAA3E,KAAAxB,MAGAA,KAAAwC,aACAxC,KAAAL,KAAAyC,OAAAK,QAAA,SAAAC,GACA1C,KAAAwC,UAAAE,GAAAC,EAAArH,SAAAoH,EAAA1C,KAAAL,KAAAsG,aACAjG,KAAAmG,wBAAAvD,MAAA,EAAAC,YAAA,KACArB,KAAAxB,QAzCA,GAAAC,GAAA5F,EAAA,iBACAsI,EAAAtI,EAAA,0BACA8F,EAAA9F,EAAA,2BACAgG,EAAAhG,EAAA,cACAuF,EAAAvF,EAAA,YACAyI,EAAAzI,EAAA,gBAAAyI,gBACAC,EAAA1I,EAAA,gBAAA0I,kBA+CAgD,GAAAzF,UAAA6F,uBAAA,SAAAzD,EAAA0D,GAEA,GAAApG,KAAAL,KAAAuG,wBAAAE,EAAAjG,GAAA,CAGAkG,UAAAC,aACAF,EAAAG,OAAA,SAGA,IAAAnD,IACAC,UAAA,SACAoC,cAAA,gBACAC,YAAAhD,EAAAQ,KACAyC,WAAAS,EAAAI,MAGAjD,EAAAtD,KAAAD,KAAAL,KAAA7C,UACAiG,EAAAqD,EAAApG,KAAAL,KAAA0C,iBAEArC,MAAAvC,QAAAgG,KAAA,QAAAX,EACAM,EAAAG,EAAAvD,KAAAvC,QAAAuC,KAAAL,KAAAzC,UAAAkJ,MAaAL,EAAAzF,UAAA4F,wBACA,SAAAE,EAAAjG,GAEA,GAAAO,GAAAP,EAAAiG,EAAAI,KACA,OAAA9F,GAAA+F,UAAAjG,SAAAiG,UACA,QAAA/F,EAAAgG,SAAA5I,MAAA,EAAA,IAOAiI,EAAAzF,UAAAmB,OAAA,WACAxD,OAAAyF,KAAA1D,KAAAwC,WAAAC,QAAA,SAAA1E,GACAiC,KAAAwC,UAAAzE,GAAA4F,WACAnC,KAAAxB,QAIAK,EAAA,sBAAA0F,KR+iBGnE,aAAa,GAAGC,WAAW,GAAG+B,eAAe,GAAGC,yBAAyB,GAAG/B,0BAA0B,GAAGC,gBAAgB,KAAK4E,GAAG,SAAStM,EAAQU,EAAOJ,GSxoB5J,QAAAiM,GAAAnJ,EAAAkC,GAEAC,EAAAC,MAAApC,EAAAmC,EAAAE,QAAA+G,yBAGApI,OAAA0D,mBAEAnC,KAAAL,KAAAM,GACA6G,eAAAC,EACA7C,eAAAlE,KAAAkE,eACA8C,kBAAA,KACAC,mBAAA,KACAnK,aACAI,UAAA,MACAyC,GAEAK,KAAAvC,QAAAA,EACAuC,KAAAkH,gBAAA5L,SAAA4L,gBAIAlH,KAAAmH,0BAAA,GAAAC,MAGApH,KAAAqH,4BACArH,KAAAqH,4BAAA7F,KAAAxB,MAEAA,KAAAsH,4BACAtH,KAAAuH,6BAEAjM,SAAA6G,iBACA,mBAAAnC,KAAAqH,8BA/CA,GAAApH,GAAA5F,EAAA,iBACAgG,EAAAhG,EAAA,cACAuF,EAAAvF,EAAA,YACAyI,EAAAzI,EAAA,gBAAAyI,gBACAsB,EAAA/J,EAAA,gBAAA+J,SAGA2C,EAAA,EAsDAH,GAAAtG,UAAA+G,4BAAA,WAEA,GAAAjE,EAIA,IAHApD,KAAAwH,oBAAAxH,KAAAkH,gBACAlH,KAAAkH,gBAAA5L,SAAA4L,gBAEAlH,KAAAyH,qBAAA,CAEA,GAAA,UAAAzH,KAAAkH,gBAAA,MAEA,YAAAlH,KAAAkH,kBAGA9D,GAAAC,UAAA,UACArD,KAAAvC,QAAAgG,KAAA,WAAAX,EAAAM,EACApD,KAAAL,KAAA7C,UAAAkD,KAAAvC,QAAAuC,KAAAL,KAAAzC,iBAGA,CAGA,GAAAwK,GAAAC,KAAAC,OACA,GAAAR,MAAApH,KAAAmH,0BAAA,MAAA,CAEA/D,IACAC,UAAA,SACAoC,cAAA,kBACAC,YAAA,SACAC,WAAA3F,KAAAL,KAAAuE,eACAlE,KAAAwH,oBAAAxH,KAAAkH,iBACAW,WAAAH,GAIA,UAAA1H,KAAAkH,kBAAA9D,EAAApG,gBAAA,EAIA,IAAA8K,GAAA9H,KAAAL,KAAAK,KAAAwH,oBAAA,cACAM,KAAA1E,EAAA,SAAA0E,GAAAJ,GAEA1H,KAAAvC,QAAAgG,KAAA,QAAAX,EAAAM,EACApD,KAAAL,KAAA7C,UAAAkD,KAAAvC,QAAAuC,KAAAL,KAAAzC,YAKA8C,KAAAmH,0BAAA,GAAAC,OAUAR,EAAAtG,UAAAmH,mBAAA,WACA,GAAAM,IAAA,GAAAX,MAAApH,KAAAgI,aAAA,GACA,OAAAhI,MAAAL,KAAAmH,eAAAiB,GASAnB,EAAAtG,UAAAgH,0BAAA,WACAtH,KAAAiI,0BAAAjI,KAAAvC,QAAAgG,KAEAzD,KAAAvC,QAAAgG,KAAA,WACA,GAAAyE,GAAAC,MAAA7H,UAAAxC,MAAAlD,KAAAwN,WACAC,EAAAH,EAAA,GACA1E,EAAAY,EAAAiE,GAAAA,EAAA7E,QAAA6E,EACAC,EAAA,YAAA9E,CAEA,KAAA8E,GAAAtI,KAAAyH,qBAAA,CACA,GAAArE,IAAAC,UAAA,SACArD,MAAAiI,0BAAArN,KAAAoF,KAAAvC,QAAA,WACAqF,EAAAM,EAAApD,KAAAL,KAAA7C,UACAkD,KAAAvC,QAAAuC,KAAAL,KAAAzC,YAGA8C,KAAAiI,0BAAAM,MAAAvI,KAAAvC,QAAAyK,IACA1G,KAAAxB,OAQA4G,EAAAtG,UAAAiH,2BAAA,WACAvH,KAAA0B,2BAAA1B,KAAAvC,QAAAF,IAAA,eACAyC,KAAAgI,aAAA,GAAAZ,MAEApH,KAAAvC,QAAAL,IAAA,cAAA,SAAAD,GACA6C,KAAA0B,2BAAAvE,GACA6C,KAAAgI,aAAA,GAAAZ,OACA5F,KAAAxB,QAWA4G,EAAAtG,UAAA4D,eAAA,SAAAsB,EAAAD,GACA,MAAAC,GAAA,OAAAD,GAOAqB,EAAAtG,UAAAmB,OAAA,WACAzB,KAAAvC,QAAAL,IAAA,cAAA4C,KAAA0B,4BACA1B,KAAAvC,QAAAgG,KAAAzD,KAAAiI,0BAEA3M,SAAAkN,oBACA,mBAAAxI,KAAAqH,8BAIAhH,EAAA,wBAAAuG,KT4qBGhF,aAAa,GAAGC,WAAW,GAAG+B,eAAe,GAAG7B,gBAAgB,KAAK0G,IAAI,SAASpO,EAAQU,EAAOJ,GUx1BpG,QAAA+N,GAAAjL,EAAAkC,GAEAC,EAAAC,MAAApC,EAAAmC,EAAAE,QAAA6I,uBAGAlK,OAAA0D,mBAEAnC,KAAAL,KAAAM,GACAnD,aACAI,UAAA,MACAyC,GAEAK,KAAAvC,QAAAA,EAGAuC,KAAA4I,mBAAA5I,KAAA4I,mBAAApH,KAAAxB,MACAA,KAAA6I,wBAAA7I,KAAA6I,wBAAArH,KAAAxB,MACAA,KAAA8I,kBAAA9I,KAAA8I,kBAAAtH,KAAAxB,MACAA,KAAA+I,mBAAA/I,KAAA+I,mBAAAvH,KAAAxB,MACAA,KAAAgJ,iBAAAhJ,KAAAgJ,iBAAAxH,KAAAxB,MACAA,KAAAiJ,mBAAAjJ,KAAAiJ,mBAAAzH,KAAAxB,MAEA,YAAA1E,SAAA4N,WAKAzK,OAAA0D,iBAAA,OAAAnC,KAAA4I,oBAGA5I,KAAA4I,sBA5CA,GAAA3I,GAAA5F,EAAA,iBACAgG,EAAAhG,EAAA,cACAuF,EAAAvF,EAAA,YACAyI,EAAAzI,EAAA,gBAAAyI,eAkDA4F,GAAApI,UAAAsI,mBAAA,WACAnK,OAAA0K,IAAAnJ,KAAAoJ,2BACA3K,OAAA4K,OAAArJ,KAAA6I,2BASAH,EAAApI,UAAAuI,wBAAA,WACA,IACAQ,MAAAC,MAAA,WACAD,MAAAjH,OAAAZ,KAAA,QAAAxB,KAAA8I,mBACAO,MAAAjH,OAAAZ,KAAA,SAAAxB,KAAA+I,qBACAvH,KAAAxB,OACA,MAAAuJ,MAQAb,EAAApI,UAAAkJ,2BAAA,WACA,IACAH,MAAAC,MAAA,WACAD,MAAAjH,OAAAqH,OAAA,QAAAzJ,KAAA8I,mBACAO,MAAAjH,OAAAqH,OAAA,SAAAzJ,KAAA+I,qBACAvH,KAAAxB,OACA,MAAAuJ,MAQAb,EAAApI,UAAA8I,yBAAA,WACA,IACAD,GAAAO,MAAAC,UAAA,cAAA3J,KAAAgJ,kBACAG,GAAAO,MAAAC,UAAA,cAAA3J,KAAAiJ,oBACA,MAAAM,MAQAb,EAAApI,UAAAsJ,4BAAA,WACA,IACAT,GAAAO,MAAAG,YAAA,cAAA7J,KAAAgJ,kBACAG,GAAAO,MAAAG,YAAA,cAAA7J,KAAAiJ,oBACA,MAAAM,MAQAb,EAAApI,UAAAwI,kBAAA,SAAApG,GAEA,GAAA,SAAAA,EAAAoH,OAAA,CAEA,GAAApJ,GAAAgC,EAAAqH,KAAArJ,KAAAgC,EAAA6D,OAAApD,aAAA,aACA3C,SAAAgG,KAEApD,GACAC,UAAA,SACA2G,cAAA,UACAC,aAAA,QACAC,aAAAxJ,EAEAV,MAAAvC,QAAAgG,KAAA,SAAAX,EAAAM,EACApD,KAAAL,KAAA7C,UAAAkD,KAAAvC,QAAAuC,KAAAL,KAAAzC,cAQAwL,EAAApI,UAAAyI,mBAAA,SAAArG,GAEA,GAAA,UAAAA,EAAAoH,OAAA,CAEA,GAAAK,GAAAzH,EAAAqH,KAAAK,aACA1H,EAAA6D,OAAApD,aAAA,oBAEAC,GACAC,UAAA,SACA2G,cAAA,UACAC,aAAA,SACAC,aAAAC,EAEAnK,MAAAvC,QAAAgG,KAAA,SAAAX,EAAAM,EACApD,KAAAL,KAAA7C,UAAAkD,KAAAvC,QAAAuC,KAAAL,KAAAzC,cAQAwL,EAAApI,UAAA0I,iBAAA,SAAAtI,GACA,GAAA0C,IACAC,UAAA,SACA2G,cAAA,WACAC,aAAA,OACAC,aAAAxJ,EAEAV,MAAAvC,QAAAgG,KAAA,SAAAX,EAAAM,EACApD,KAAAL,KAAA7C,UAAAkD,KAAAvC,QAAAuC,KAAAL,KAAAzC,aAQAwL,EAAApI,UAAA2I,mBAAA,SAAAvI,GACA,GAAA0C,IACAC,UAAA,SACA2G,cAAA,WACAC,aAAA,SACAC,aAAAxJ,EAEAV,MAAAvC,QAAAgG,KAAA,SAAAX,EAAAM,EACApD,KAAAL,KAAA7C,UAAAkD,KAAAvC,QAAAuC,KAAAL,KAAAzC,aAOAwL,EAAApI,UAAAmB,OAAA,WACAhD,OAAA+J,oBAAA,OAAAxI,KAAA4I,oBACA5I,KAAA4J,8BACA5J,KAAAwJ,8BAIAnJ,EAAA,sBAAAqI,KV63BG9G,aAAa,GAAGC,WAAW,GAAG+B,eAAe,GAAG7B,gBAAgB,KAAKsI,IAAI,SAAShQ,EAAQU,EAAOJ,GWtkCpG,GAAAyF,GAAA/F,EAAA,eACAiQ,EAAAjQ,EAAA,gBAIAoE,OAAA8L,SAAA9L,OAAA8L,cAAAjF,KAAAlF,EAAAf,QASAtE,EAAAJ,QAAA,SAAA6P,EAAAC,GACA,GAAAC,GAAAjM,OAAA,uBAAA,IACAA,QAAAiM,GAAAjM,OAAAiM,IAAA,YACAjM,OAAAiM,GAAA,EAAAjM,OAAAiM,GAAA,OAAApF,KAAA8C,YAIA3J,OAAAiM,GAAA,UAAAF,EAAAC,GAGAhM,OAAAkM,UAAAlM,OAAAkM,cACAlM,OAAAkM,UAAAL,EAAAM,WAAAJ,IAAAC,KX2lCGI,cAAc,EAAEC,cAAc,KAAKC,IAAI,SAAS1Q,EAAQU,EAAOJ,GY9lClE,QAAAqQ,GAAAC,GACA,MAAAC,UAAAD,GAAA,IAAA,IAAAE,SAAA,GASA,QAAAC,GAAAC,GACA,MAAAH,UAAAG,GAAA,IAAA,GAAAF,SAAA,IAUA,QAAAG,GAAAC,EAAAC,GACA,GAAAD,EAAA1Q,OAAA2Q,EAEA,IADA,GAAAC,GAAAD,EAAAD,EAAA1Q,OACA4Q,GACAF,EAAA,IAAAA,EACAE,GAGA,OAAAF,GAWA,QAAAG,GAAAH,EAAAI,GACA,MAAAJ,GAAAnK,OAAA,EAAAuK,GAAA,EAAAJ,EAAAnK,OAAAuK,EAAA,GAUA,QAAAC,GAAAnO,EAAAoO,GACA,GAAAC,GAAArO,EAAAF,IAAA6C,EAAAb,aACAwM,EAAAT,EAAAN,EAAAc,GAAAE,EAGAD,GAAAL,EAAAK,EAAAC,EAAAH,GAGApO,EAAAL,IAAAgD,EAAAb,YAAA6L,EAAAW,IAQA,QAAAE,GAAAxO,GACAA,EAAAL,IAAAgD,EAAAd,cAAAc,EAAAhB,SA1FA,GAAAgB,GAAA/F,EAAA,eAGAyF,GACAC,kBAAA,EACAmC,cAAA,EACAgK,mBAAA,EACAlI,oBAAA,EACAmI,sBAAA,EACAnG,sBAAA,EACAa,wBAAA,EACA8B,sBAAA,EACAyD,mBAAA,GAEAJ,EAAA,CAgFAjR,GAAAJ,SACAkF,MAAA,SAAApC,EAAA4O,GACAJ,EAAAxO,GACAmO,EAAAnO,EAAA4O,IAEAvM,QAAAA,KZyoCG+K,cAAc,IAAIyB,IAAI,SAASjS,EAAQU,EAAOJ,Ga5uCjD,GAAAsF,GAAA5F,EAAA,iBACAkS,EAAAlS,EAAA,gCAGAiQ,GAkBAxH,gBAAA,SACAM,EAAAG,EAAAiJ,EAAAC,EAAAC,GAEA,GAAA,kBAAAD,GAAA,CACA,GAAAE,GAAAH,EAAAjP,IAAA,eACA,QACAqP,aAAA,SAAAzP,GACAA,EAAAC,IAAAgG,EAAA,MAAA,GACAjG,EAAAC,IAAAmG,EAAA,MAAA,GACAkJ,EAAAtP,EAAAuP,GACAC,EAAAxP,KAKA,MAAA8C,MAAAmD,EAAAG,IAaAR,mBAAA,SAAAC,EAAAC,GACA,GAAA4J,GAAAN,EAAAvJ,GACAM,IAkBA,OAhBArF,QAAAyF,KAAAmJ,GAAApK,QAAA,SAAAqK,GAGA,GAAA,IAAAA,EAAAC,QAAA9J,IAAA6J,GAAA7J,EAAA,KAAA,CAEA,GAAAjF,GAAA6O,EAAAC,EAGA,SAAA9O,IAAAA,GAAA,GACA,SAAAA,IAAAA,GAAA,EAEA,IAAAgP,GAAA1C,EAAA2C,UAAAH,EAAAhP,MAAAmF,EAAApI,QACAyI,GAAA0J,GAAAhP,KAIAsF,GAIA4J,SAAA,SAAAC,GACA,WAAA7R,SAAA4N,WACA5N,SAAA6G,iBAAA,mBAAA,QAAAgD,KACA7J,SAAAkN,oBAAA,mBAAArD,GACAgI,MAGAA,KAeAC,YAAA,SAAAD,EAAAE,GACA,GAAAC,IAAA,CAEA,OADAC,YAAAJ,EAAAE,GAAA,KACA,WACAC,IACAA,GAAA,EACAH,OAYAF,UAAA,SAAA1B,GACA,MAAAA,GAAAtK,QAAA,gBAAA,SAAA8D,EAAAyI,GACA,MAAAA,GAAAC,iBAUA7C,WAAA,SAAAW,GACA,MAAAA,GAAAmC,OAAA,GAAAD,cAAAlC,EAAAzN,MAAA,IASAsG,SAAA,SAAApG,GACA,MAAA,gBAAAA,IAAA,OAAAA,GASA2P,QAAAxF,MAAAwF,SAAA,SAAA3P,GACA,MAAA,mBAAAC,OAAAqC,UAAA6K,SAAAvQ,KAAAoD,IAUAqG,QAAA,SAAArG,GACA,MAAAsM,GAAAqD,QAAA3P,GAAAA,GAAAA,IAIAjD,GAAAJ,QAAA2P,IbgwCGsD,+BAA+B,GAAG7L,gBAAgB,KAAK8L,IAAI,SAASxT,EAAQU,EAAOJ,Gcn7CtF,YAKA,SAAAmT,GAAAC,GACA,GAAA,OAAAA,GAAAC,SAAAD,EACA,KAAA,IAAAE,WAAA,wDAGA,OAAAhQ,QAAA8P,GAGA,QAAAG,KACA,IACA,IAAAjQ,OAAAgC,OACA,OAAA,CAMA,IAAAkO,GAAA,GAAA7Q,QAAA,MAEA,IADA6Q,EAAA,GAAA,KACA,MAAAlQ,OAAAmQ,oBAAAD,GAAA,GACA,OAAA,CAKA,KAAA,GADAE,MACA/T,EAAA,EAAA,GAAAA,EAAAA,IACA+T,EAAA,IAAA/Q,OAAAgR,aAAAhU,IAAAA,CAEA,IAAAiU,GAAAtQ,OAAAmQ,oBAAAC,GAAAG,IAAA,SAAAzU,GACA,MAAAsU,GAAAtU,IAEA,IAAA,eAAAwU,EAAAvN,KAAA,IACA,OAAA,CAIA,IAAAyN,KAIA,OAHA,uBAAA1N,MAAA,IAAA0B,QAAA,SAAAiM,GACAD,EAAAC,GAAAA,IAGA,yBADAzQ,OAAAyF,KAAAzF,OAAAgC,UAAAwO,IAAAzN,KAAA,IAMA,MAAAnH,GAEA,OAAA,GAnDA,GAAA8U,GAAA1Q,OAAAqC,UAAAqO,eACAC,EAAA3Q,OAAAqC,UAAAuO,oBAsDA9T,GAAAJ,QAAAuT,IAAAjQ,OAAAgC,OAAA,SAAAsG,EAAAuI,GAKA,IAAA,GAJAC,GAEAC,EADAC,EAAAnB,EAAAvH,GAGAtM,EAAA,EAAAA,EAAAmO,UAAAvN,OAAAZ,IAAA,CACA8U,EAAA9Q,OAAAmK,UAAAnO,GAEA,KAAA,GAAA8D,KAAAgR,GACAJ,EAAA/T,KAAAmU,EAAAhR,KACAkR,EAAAlR,GAAAgR,EAAAhR,GAIA,IAAAE,OAAAiR,sBAAA,CACAF,EAAA/Q,OAAAiR,sBAAAH,EACA,KAAA,GAAAzU,GAAA,EAAAA,EAAA0U,EAAAnU,OAAAP,IACAsU,EAAAhU,KAAAmU,EAAAC,EAAA1U,MACA2U,EAAAD,EAAA1U,IAAAyU,EAAAC,EAAA1U,MAMA,MAAA2U,Sdu7CME,IAAI,SAAS9U,EAAQU,EAAOJ,GetgDlC,QAAAyU,KACA,OAAA,GAAAhI,OAAAiI,UAHAtU,EAAAJ,QAAAyM,KAAAgI,KAAAA,Of+gDME,IAAI,SAASjV,EAAQU,EAAOJ,GgB1gDlC,GAAAyU,GAAA/U,EAAA,WAgBAU,GAAAJ,QAAA,SAAA4U,EAAAlC,EAAAmC,GAIA,QAAAC,KACA,GAAAC,GAAAN,IAAAO,CAEAtC,GAAAqC,GAAAA,EAAA,EACAE,EAAArC,WAAAkC,EAAApC,EAAAqC,IAEAE,EAAA,KACAJ,IACAK,EAAAN,EAAAhH,MAAAuH,EAAA5H,GACA0H,IAAAE,EAAA5H,EAAA,QAZA,GAAA0H,GAAA1H,EAAA4H,EAAAH,EAAAE,CAiBA,OAhBA,OAAAxC,IAAAA,EAAA,KAgBA,WACAyC,EAAA9P,KACAkI,EAAAE,UACAuH,EAAAP,GACA,IAAAW,GAAAP,IAAAI,CAOA,OANAA,KAAAA,EAAArC,WAAAkC,EAAApC,IACA0C,IACAF,EAAAN,EAAAhH,MAAAuH,EAAA5H,GACA4H,EAAA5H,EAAA,MAGA2H,MhBohDGG,WAAW,KAAKC,IAAI,SAAS5V,EAAQU,EAAOJ,GiBtkD/C,GAAAsK,GAAA5K,EAAA,aACA6V,EAAA7V,EAAA,YAUAU,GAAAJ,QAAA,SAAAqI,EAAAT,EAAA4N,GACA,GAAAnN,GAAA,GAAAA,EAAAoN,UAAA7N,EAKA,IAAA,GAAA8N,GAHAC,GACAH,GAAAnN,OAAAuN,OAAAL,EAAAlN,IAEA1I,EAAA,EAAA+V,EAAAC,EAAAhW,GAAAA,IACA,GAAA2K,EAAAoL,EAAA9N,GAAA,MAAA8N,MjB2kDGG,YAAY,GAAGC,YAAY,KAAKC,IAAI,SAASrW,EAAQU,EAAOJ,GkB7lD/D,GAAAgW,GAAAtW,EAAA,aACA4K,EAAA5K,EAAA,YAcAU,GAAAJ,QAAA,SACAiW,EAAAC,EAAAtO,EAAA4K,EAAAxN,GAEAA,EAAAA,KAGA,IAAAiG,GAAA,SAAAlD,GAIA,GAAA/C,EAAAiD,MAAA,kBAAAF,GAAAoO,SAEA,IAAA,GAAAC,GADAC,EAAAtO,EAAAoO,WACAxW,EAAA,EAAAyW,EAAAC,EAAA1W,GAAAA,IACA,GAAAyW,EAAAX,UAAAnL,EAAA8L,EAAAxO,KACA0O,EAAAF,OAMA,IAAAE,GAAAN,EAAAjO,EAAA6D,OAAAhE,GAAA,EAGA0O,IACA9D,EAAAvS,KAAAqW,EAAAvO,EAAAuO,GAMA,OAFAL,GAAAzO,iBAAA0O,EAAAjL,EAAAjG,EAAAkD,aAGAc,QAAA,WACAiN,EAAApI,oBAAAqI,EAAAjL,EAAAjG,EAAAkD,iBlBmmDGqO,YAAY,GAAGV,YAAY,KAAKW,IAAI,SAAS9W,EAAQU,EAAOJ,GmB3oD/DI,EAAAJ,QAAA,SAAAqI,GACA,GAAAoO,KAGA,KAAApO,GAAA,GAAAA,EAAAoN,SAAA,MAAAgB,EAGA,IAAA5C,GAAAxL,EAAA6J,UACA,IAAA,IAAA2B,EAAA3T,OAAA,QAEA,KAAA,GAAAwW,GAAA/W,EAAA,EAAA+W,EAAA7C,EAAAlU,GAAAA,IACA8W,EAAAC,EAAA3U,MAAA2U,EAAArT,KAEA,OAAAoT,SnBspDME,IAAI,SAASjX,EAAQU,EAAOJ,GoB1pDlC,QAAA4W,GAAAvO,EAAAT,GACA,GAAA,gBAAAA,GAAA,OAAA,CACA,IAAAiP,EAAA,MAAAA,GAAA5W,KAAAoI,EAAAT,EAEA,KAAA,GAAAwO,GADAU,EAAAzO,EAAA0O,WAAAC,iBAAApP,GACAjI,EAAA,EAAAyW,EAAAU,EAAAnX,GAAAA,IACA,GAAAyW,GAAA/N,EAAA,OAAA,CAEA,QAAA,EAvBA,GAAA4O,GAAAC,QAAAvR,UACAkR,EAAAI,EAAA3M,SACA2M,EAAAL,iBACAK,EAAAE,uBACAF,EAAAG,oBACAH,EAAAI,mBACAJ,EAAAK,gBA4BAlX,GAAAJ,QAAA,SAAAqI,EAAA7B,GAEA,GAAA6B,GAAA,GAAAA,EAAAoN,UAAAjP,EAAA,CAEA,GAAA,gBAAAA,IAAA,GAAAA,EAAAiP,SACA,MAAApN,IAAA7B,GAAAoQ,EAAAvO,EAAA7B,EAIA,IAAA,UAAAA,GACA,IAAA,GAAA6D,GAAA1K,EAAA,EAAA0K,EAAA7D,EAAA7G,GAAAA,IACA,GAAA0I,GAAAgC,GAAAuM,EAAAvO,EAAAgC,GAAA,OAAA,EAKA,OAAA,QpB8qDMkN,IAAI,SAAS7X,EAAQU,EAAOJ,GqB1tDlCI,EAAAJ,QAAA,SAAAqI,GAEA,IADA,GAAAmP,MACAnP,GAAAA,EAAA0O,YAAA,GAAA1O,EAAA0O,WAAAtB,UACA+B,EAAA7M,KAAAtC,EAAAA,EAAA0O,WAEA,OAAAS,SrBouDMC,IAAI,SAAS/X,EAAQU,EAAOJ,GsB/uDlC,GAAA0X,GAAA,KACAC,EAAA,MACAC,EAAAC,OAAA,KAAAH,EAAA,IAAAC,EAAA,MAGAlY,EAAAkB,SAAAC,cAAA,KACAkX,IASA1X,GAAAJ,QAAA,QAAAwF,GAAAO,GAKA,GAFAA,EAAAA,GAAA,KAAAA,EAAAA,EAAAF,SAAAgG,KAEAiM,EAAA/R,GAAA,MAAA+R,GAAA/R,EAOA,IALAtG,EAAAoM,KAAA9F,EAKA,KAAAA,EAAAgN,OAAA,GAAA,MAAAvN,GAAA/F,EAAAoM,KAIA,IAAAE,GAAAtM,EAAAsM,UAAA,KAAAtM,EAAAsM,SACAtM,EAAAsM,SAAAlG,SAAAkG,SAGAgM,EAAAtY,EAAAsY,MAAAL,GAAAjY,EAAAsY,MAAAJ,EAAA,GAAAlY,EAAAsY,IAGAA,GAAA,KAAAA,EAAA,GAAAA,CAGA,IAAAC,GAAA,IAAAvY,EAAAuY,KAAAnS,SAAAmS,KAAAvY,EAAAuY,KACAlM,EAAA,IAAArM,EAAAqM,SAAAjG,SAAAiG,SAAArM,EAAAqM,QAKAkM,GAAAA,EAAA1R,QAAAsR,EAAA,GAGA,IAAAK,GAAAxY,EAAAwY,OAAAxY,EAAAwY,OAAAlM,EAAA,KAAAiM,EAIA/R,EAAA,KAAAxG,EAAAwG,SAAA8M,OAAA,GAAAtT,EAAAwG,SAAA,IAAAxG,EAAAwG,QAEA,OAAA6R,GAAA/R,IACAmS,KAAAzY,EAAAyY,KACAF,KAAAA,EACAlM,SAAAA,EACAD,KAAApM,EAAAoM,KACAoM,OAAAA,EAEAhS,SAAAA,EACA8R,KAAAA,EACAhM,SAAAA,EACApF,OAAAlH,EAAAkH,OAGAwR,SAAA1Y,EAAAyY,KAAA/U,MAAA,GACAkT,KAAApQ,EAAAxG,EAAAkH,OACAD,MAAAjH,EAAAkH,OAAAxD,MAAA,etBovDW","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nrequire(\"./analytics\");\n\nvar supports = _interopRequire(require(\"./supports\"));\n\n// Add an `is-legacy` class on browsers that don't supports flexbox.\nif (!supports.flexbox()) {\n  var div = document.createElement(\"div\");\n  div.className = \"Error\";\n  div.innerHTML = \"Your browser does not support Flexbox.\\n                   Parts of this site may not appear as expected.\";\n\n  document.body.insertBefore(div, document.body.firstChild);\n}\n\n},{\"./analytics\":2,\"./supports\":3}],2:[function(require,module,exports){\n\"use strict\";\n\nvar _defineProperty = function (obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); };\n\nrequire(\"autotrack/lib/plugins/clean-url-tracker\");\n\nrequire(\"autotrack/lib/plugins/event-tracker\");\n\nrequire(\"autotrack/lib/plugins/media-query-tracker\");\n\nrequire(\"autotrack/lib/plugins/outbound-link-tracker\");\n\nrequire(\"autotrack/lib/plugins/page-visibility-tracker\");\n\nrequire(\"autotrack/lib/plugins/social-widget-tracker\");\n\n/* global ga */\n\nvar metrics = {\n  PAGE_VISIBLE: \"metric1\",\n  PAGE_HIDDEN: \"metric2\"\n};\n\nvar dimensions = {\n  BREAKPOINT: \"dimension1\",\n  RESOLUTION: \"dimension2\",\n  ORIENTATION: \"dimension3\",\n  HIT_SOURCE: \"dimension4\",\n  URL_QUERY_PARAMS: \"dimension5\",\n  METRIC_VALUE: \"dimension6\",\n  CLIENT_ID: \"dimension7\"\n};\n\nga(\"create\", \"UA-40829935-1\", \"auto\");\n\n// Delays running any analytics until after the load event\n// to ensure beacons don't block resources.\nwindow.onload = function () {\n  requirePlugins();\n  trackClientId();\n  sendInitialPageview();\n};\n\nfunction requirePlugins() {\n  ga(\"require\", \"cleanUrlTracker\", {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    indexFilename: \"index.html\",\n    trailingSlash: \"add\"\n  });\n  ga(\"require\", \"eventTracker\");\n  ga(\"require\", \"mediaQueryTracker\", {\n    definitions: [{\n      name: \"Breakpoint\",\n      dimensionIndex: 1,\n      items: [{ name: \"xs\", media: \"all\" }, { name: \"sm\", media: \"(min-width: 384px)\" }, { name: \"md\", media: \"(min-width: 576px)\" }, { name: \"lg\", media: \"(min-width: 768px)\" }]\n    }, {\n      name: \"Resolution\",\n      dimensionIndex: 2,\n      items: [{ name: \"1x\", media: \"all\" }, { name: \"1.5x\", media: \"(-webkit-min-device-pixel-ratio: 1.5), \" + \"(min-resolution: 144dpi)\" }, { name: \"2x\", media: \"(-webkit-min-device-pixel-ratio: 2), \" + \"(min-resolution: 192dpi)\" }]\n    }, {\n      name: \"Orientation\",\n      dimensionIndex: 3,\n      items: [{ name: \"landscape\", media: \"(orientation: landscape)\" }, { name: \"portrait\", media: \"(orientation: portrait)\" }]\n    }]\n  });\n  ga(\"require\", \"outboundLinkTracker\");\n  ga(\"require\", \"pageVisibilityTracker\", {\n    fieldsObj: _defineProperty({\n      nonInteraction: null }, dimensions.HIT_SOURCE, \"pageVisibilityTracker\"),\n    hitFilter: function hitFilter(model) {\n      model.set(dimensions.METRIC_VALUE, String(model.get(\"eventValue\")), true);\n    }\n  });\n  ga(\"require\", \"socialWidgetTracker\");\n}\n\nfunction trackClientId() {\n  ga(function (tracker) {\n    var clientId = tracker.get(\"clientId\");\n    tracker.set(dimensions.CLIENT_ID, clientId);\n  });\n}\n\nfunction sendInitialPageview() {\n  ga(\"send\", \"pageview\", _defineProperty({}, dimensions.HIT_SOURCE, \"pageload\"));\n}\n\n// Accepts a custom dimension or metric and returns it's numerical index.\nfunction getDefinitionIndex(dimension) {\n  return +dimension.slice(-1);\n}\n// Ensure all events are interactive.\n\n},{\"autotrack/lib/plugins/clean-url-tracker\":5,\"autotrack/lib/plugins/event-tracker\":6,\"autotrack/lib/plugins/media-query-tracker\":7,\"autotrack/lib/plugins/outbound-link-tracker\":8,\"autotrack/lib/plugins/page-visibility-tracker\":9,\"autotrack/lib/plugins/social-widget-tracker\":10}],3:[function(require,module,exports){\n\"use strict\";\n\nvar supports = {};\nvar style = document.body.style;\n\nmodule.exports = {\n  flexbox: function flexbox() {\n    return supports.flexbox || (supports.flexbox = \"flexBasis\" in style || \"msFlexAlign\" in style || \"webkitBoxDirection\" in style);\n  }\n};\n\n},{}],4:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  VERSION: '1.0.0',\n  DEV_ID: 'i5iSjo',\n\n  VERSION_PARAM: '&_av',\n  USAGE_PARAM: '&_au',\n\n  NULL_DIMENSION: '(not set)'\n};\n\n},{}],5:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.CLEAN_URL_TRACKER);\n\n  this.opts = assign({\n    stripQuery: false,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash == 'remove') {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash == 'add') {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n\n},{\"../constants\":4,\"../provide\":11,\"../usage\":12,\"dom-utils/lib/parse-url\":22,\"object-assign\":14}],6:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.EVENT_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {transport: 'beacon'};\n  var attributeFields = getAttributeFields(element, prefix);\n  var userFields = assign({}, this.opts.fieldsObj, attributeFields);\n  var hitType = attributeFields.hitType || 'event';\n\n  this.tracker.send(hitType, createFieldsObj(\n      defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n\n},{\"../provide\":11,\"../usage\":12,\"../utilities\":13,\"dom-utils/lib/delegate\":18,\"object-assign\":14}],7:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.MEDIA_QUERY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = assign({\n    definitions: null,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n},{\"../constants\":4,\"../provide\":11,\"../usage\":12,\"../utilities\":13,\"debounce\":16,\"object-assign\":14}],8:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.OUTBOUND_LINK_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n        this.handleLinkInteractions, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all interactions on link elements. A link is considered an outbound\n * link if its hostname property does not match location.hostname. When the\n * beacon transport method is not available, the links target is set to\n * \"_blank\" to ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkInteractions = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: event.type,\n      eventLabel: link.href\n    };\n\n    var userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(link, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n},{\"../provide\":11,\"../usage\":12,\"../utilities\":13,\"dom-utils/lib/delegate\":18,\"dom-utils/lib/parse-url\":22,\"object-assign\":14}],9:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.PAGE_VISIBILITY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    hiddenMetricIndex: null,\n    visibleMetricIndex: null,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    // Rounds the time up to the nearest second. If the rounded value is zero\n    // use 1 instead since unset metrics default to 0.\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000) || 1;\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // Changes to hidden are non interaction hits by default\n    if (this.visibilityState == 'hidden') defaultFields.nonInteraction = true;\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n\n},{\"../provide\":11,\"../usage\":12,\"../utilities\":13,\"object-assign\":14}],10:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.SOCIAL_WIDGET_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n\n},{\"../provide\":11,\"../usage\":12,\"../utilities\":13,\"object-assign\":14}],11:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n\n},{\"./constants\":4,\"./utilities\":13}],12:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9\n};\nvar PLUGIN_COUNT = 9;\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get(constants.USAGE_PARAM);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set(constants.USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set(constants.VERSION_PARAM, constants.VERSION);\n}\n\n\nmodule.exports = {\n  track: function(tracker, plugin) {\n    trackVersion(tracker);\n    trackPlugin(tracker, plugin);\n  },\n  plugins: plugins\n};\n\n},{\"./constants\":4}],13:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar getAttributes = require('dom-utils/lib/get-attributes');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker, hit\n   * filter, and target element and returns a single object that can be used in\n   * `ga('send', ...)` commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @param {Element} opt_target If the hit originated from an interaction\n   *     with a DOM element, hitFilter is invoked with that element as the\n   *     second argument.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(\n      defaultFields, userFields, opt_tracker, opt_hitFilter, opt_target) {\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields, null, true);\n          model.set(userFields, null, true);\n          opt_hitFilter(model, opt_target);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Retrieves the attributes from an DOM element and returns a fields object\n   * for all attributes matching the passed prefix string.\n   * @param {Element} element The DOM element to get attributes from.\n   * @param {string} prefix An attribute prefix. Only the attributes matching\n   *     the prefix will be returned on the fields object.\n   * @return {Object} An object of analytics.js fields and values\n   */\n  getAttributeFields: function(element, prefix) {\n    var attributes = getAttributes(element);\n    var attributeFields = {};\n\n    Object.keys(attributes).forEach(function(attribute) {\n\n      // The `on` prefix is used for event handling but isn't a field.\n      if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n\n        var value = attributes[attribute];\n\n        // Detects Boolean value strings.\n        if (value == 'true') value = true;\n        if (value == 'false') value = false;\n\n        var field = utilities.camelCase(attribute.slice(prefix.length));\n        attributeFields[field] = value;\n      }\n    });\n\n    return attributeFields;\n  },\n\n\n  domReady: function(callback) {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', function fn() {\n        document.removeEventListener('DOMContentLoaded', fn);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts a string containing hyphen or underscore word separators and\n   * converts it to camelCase.\n   * @param {string} str The string to camelCase.\n   * @return {string} The camelCased version of the string.\n   */\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n\n},{\"dom-utils/lib/get-attributes\":19,\"object-assign\":14}],14:[function(require,module,exports){\n'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n},{}],15:[function(require,module,exports){\nmodule.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n\n},{}],16:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n\n},{\"date-now\":15}],17:[function(require,module,exports){\nvar matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n\n},{\"./matches\":20,\"./parents\":21}],18:[function(require,module,exports){\nvar closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.deep is true and the event originated from inside a Shadow DOM,\n    // check the deep nodes.\n    if (opts.deep && typeof event.deepPath == 'function') {\n      var path = event.deepPath();\n      for (var i = 0, node; node = path[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n\n},{\"./closest\":17,\"./matches\":20}],19:[function(require,module,exports){\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n\n},{}],20:[function(require,module,exports){\nvar proto = Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n\n},{}],21:[function(require,module,exports){\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n\n},{}],22:[function(require,module,exports){\nvar HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // To workaround this, we reparse with the full URL from the `href` property.\n  if (url.charAt(0) == '.') return parseUrl(a.href);\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // IE will return an empty string for host and hostname with a relative URL.\n  var host = a.host == '' ? location.host : a.host;\n  var hostname = a.hostname == '' ? location.hostname : a.hostname;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  host = host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: hostname,\n    href: a.href,\n    origin: origin,\n\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n\n},{}]},{},[1])\n\n","import './analytics';\nimport supports from './supports';\n\n\n// Add an `is-legacy` class on browsers that don't supports flexbox.\nif (!supports.flexbox()) {\n  let div = document.createElement('div');\n  div.className = 'Error';\n  div.innerHTML = `Your browser does not support Flexbox.\n                   Parts of this site may not appear as expected.`;\n\n  document.body.insertBefore(div, document.body.firstChild);\n}\n","import 'autotrack/lib/plugins/clean-url-tracker';\nimport 'autotrack/lib/plugins/event-tracker';\nimport 'autotrack/lib/plugins/media-query-tracker';\nimport 'autotrack/lib/plugins/outbound-link-tracker';\nimport 'autotrack/lib/plugins/page-visibility-tracker';\nimport 'autotrack/lib/plugins/social-widget-tracker';\n\n\n/* global ga */\n\n\nconst metrics = {\n  PAGE_VISIBLE: 'metric1',\n  PAGE_HIDDEN: 'metric2'\n};\n\n\nconst dimensions = {\n  BREAKPOINT: 'dimension1',\n  RESOLUTION: 'dimension2',\n  ORIENTATION: 'dimension3',\n  HIT_SOURCE: 'dimension4',\n  URL_QUERY_PARAMS: 'dimension5',\n  METRIC_VALUE: 'dimension6',\n  CLIENT_ID: 'dimension7'\n};\n\n\nga('create', 'UA-40829935-1', 'auto');\n\n\n// Delays running any analytics until after the load event\n// to ensure beacons don't block resources.\nwindow.onload = function() {\n  requirePlugins();\n  trackClientId();\n  sendInitialPageview();\n};\n\n\n\nfunction requirePlugins() {\n  ga('require', 'cleanUrlTracker', {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    indexFilename: 'index.html',\n    trailingSlash: 'add'\n  });\n  ga('require', 'eventTracker');\n  ga('require', 'mediaQueryTracker', {\n    definitions: [\n      {\n        name: 'Breakpoint',\n        dimensionIndex: 1,\n        items: [\n          {name: 'xs', media: 'all'},\n          {name: 'sm', media: '(min-width: 384px)'},\n          {name: 'md', media: '(min-width: 576px)'},\n          {name: 'lg', media: '(min-width: 768px)'}\n        ]\n      },\n      {\n        name: 'Resolution',\n        dimensionIndex: 2,\n        items: [\n          {name: '1x',   media: 'all'},\n          {name: '1.5x', media: '(-webkit-min-device-pixel-ratio: 1.5), ' +\n                                '(min-resolution: 144dpi)'},\n          {name: '2x',   media: '(-webkit-min-device-pixel-ratio: 2), ' +\n                                '(min-resolution: 192dpi)'},\n        ]\n      },\n      {\n        name: 'Orientation',\n        dimensionIndex: 3,\n        items: [\n          {name: 'landscape', media: '(orientation: landscape)'},\n          {name: 'portrait',  media: '(orientation: portrait)'}\n        ]\n      }\n    ]\n  });\n  ga('require', 'outboundLinkTracker');\n  ga('require', 'pageVisibilityTracker', {\n    fieldsObj: {\n      nonInteraction: null, // Ensure all events are interactive.\n      [dimensions.HIT_SOURCE]: 'pageVisibilityTracker'\n    },\n    hitFilter: function(model) {\n      model.set(dimensions.METRIC_VALUE, String(model.get('eventValue')), true);\n    }\n  });\n  ga('require', 'socialWidgetTracker');\n}\n\n\nfunction trackClientId() {\n  ga(function(tracker) {\n    let clientId = tracker.get('clientId');\n    tracker.set(dimensions.CLIENT_ID, clientId);\n  });\n}\n\n\nfunction sendInitialPageview() {\n  ga('send', 'pageview', {[dimensions.HIT_SOURCE]: 'pageload'});\n}\n\n\n// Accepts a custom dimension or metric and returns it's numerical index.\nfunction getDefinitionIndex(dimension) {\n  return +dimension.slice(-1);\n}\n","let supports = {};\nlet style = document.body.style;\n\nexport default {\n  flexbox: function() {\n    return supports.flexbox || (supports.flexbox = ('flexBasis' in style ||\n        'msFlexAlign' in style || 'webkitBoxDirection' in style));\n  }\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  VERSION: '1.0.0',\n  DEV_ID: 'i5iSjo',\n\n  VERSION_PARAM: '&_av',\n  USAGE_PARAM: '&_au',\n\n  NULL_DIMENSION: '(not set)'\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.CLEAN_URL_TRACKER);\n\n  this.opts = assign({\n    stripQuery: false,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash == 'remove') {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash == 'add') {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.EVENT_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {transport: 'beacon'};\n  var attributeFields = getAttributeFields(element, prefix);\n  var userFields = assign({}, this.opts.fieldsObj, attributeFields);\n  var hitType = attributeFields.hitType || 'event';\n\n  this.tracker.send(hitType, createFieldsObj(\n      defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.MEDIA_QUERY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = assign({\n    definitions: null,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.OUTBOUND_LINK_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n        this.handleLinkInteractions, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all interactions on link elements. A link is considered an outbound\n * link if its hostname property does not match location.hostname. When the\n * beacon transport method is not available, the links target is set to\n * \"_blank\" to ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkInteractions = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: event.type,\n      eventLabel: link.href\n    };\n\n    var userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(link, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.PAGE_VISIBILITY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    hiddenMetricIndex: null,\n    visibleMetricIndex: null,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    // Rounds the time up to the nearest second. If the rounded value is zero\n    // use 1 instead since unset metrics default to 0.\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000) || 1;\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // Changes to hidden are non interaction hits by default\n    if (this.visibilityState == 'hidden') defaultFields.nonInteraction = true;\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.SOCIAL_WIDGET_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9\n};\nvar PLUGIN_COUNT = 9;\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get(constants.USAGE_PARAM);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set(constants.USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set(constants.VERSION_PARAM, constants.VERSION);\n}\n\n\nmodule.exports = {\n  track: function(tracker, plugin) {\n    trackVersion(tracker);\n    trackPlugin(tracker, plugin);\n  },\n  plugins: plugins\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar getAttributes = require('dom-utils/lib/get-attributes');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker, hit\n   * filter, and target element and returns a single object that can be used in\n   * `ga('send', ...)` commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @param {Element} opt_target If the hit originated from an interaction\n   *     with a DOM element, hitFilter is invoked with that element as the\n   *     second argument.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(\n      defaultFields, userFields, opt_tracker, opt_hitFilter, opt_target) {\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields, null, true);\n          model.set(userFields, null, true);\n          opt_hitFilter(model, opt_target);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Retrieves the attributes from an DOM element and returns a fields object\n   * for all attributes matching the passed prefix string.\n   * @param {Element} element The DOM element to get attributes from.\n   * @param {string} prefix An attribute prefix. Only the attributes matching\n   *     the prefix will be returned on the fields object.\n   * @return {Object} An object of analytics.js fields and values\n   */\n  getAttributeFields: function(element, prefix) {\n    var attributes = getAttributes(element);\n    var attributeFields = {};\n\n    Object.keys(attributes).forEach(function(attribute) {\n\n      // The `on` prefix is used for event handling but isn't a field.\n      if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n\n        var value = attributes[attribute];\n\n        // Detects Boolean value strings.\n        if (value == 'true') value = true;\n        if (value == 'false') value = false;\n\n        var field = utilities.camelCase(attribute.slice(prefix.length));\n        attributeFields[field] = value;\n      }\n    });\n\n    return attributeFields;\n  },\n\n\n  domReady: function(callback) {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', function fn() {\n        document.removeEventListener('DOMContentLoaded', fn);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts a string containing hyphen or underscore word separators and\n   * converts it to camelCase.\n   * @param {string} str The string to camelCase.\n   * @return {string} The camelCased version of the string.\n   */\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n","\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n","var matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n","var closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.deep is true and the event originated from inside a Shadow DOM,\n    // check the deep nodes.\n    if (opts.deep && typeof event.deepPath == 'function') {\n      var path = event.deepPath();\n      for (var i = 0, node; node = path[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n","var proto = Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n","var HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // To workaround this, we reparse with the full URL from the `href` property.\n  if (url.charAt(0) == '.') return parseUrl(a.href);\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // IE will return an empty string for host and hostname with a relative URL.\n  var host = a.host == '' ? location.host : a.host;\n  var hostname = a.hostname == '' ? location.hostname : a.hostname;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  host = host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: hostname,\n    href: a.href,\n    origin: origin,\n\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n"],"sourceRoot":"/source/"}