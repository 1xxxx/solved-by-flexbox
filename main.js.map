{"version":3,"sources":["node_modules/browser-pack/_prelude.js","main.js","assets/javascript/main.js","assets/javascript/analytics.js","assets/javascript/supports.js","node_modules/autotrack/lib/constants.js","node_modules/autotrack/lib/plugins/clean-url-tracker.js","node_modules/autotrack/lib/plugins/event-tracker.js","node_modules/autotrack/lib/plugins/media-query-tracker.js","node_modules/autotrack/lib/plugins/outbound-link-tracker.js","node_modules/autotrack/lib/plugins/page-visibility-tracker.js","node_modules/autotrack/lib/plugins/social-widget-tracker.js","node_modules/autotrack/lib/provide.js","node_modules/autotrack/lib/utilities.js","node_modules/autotrack/node_modules/object-assign/index.js","node_modules/date-now/index.js","node_modules/debounce/index.js","node_modules/dom-utils/lib/closest.js","node_modules/dom-utils/lib/delegate.js","node_modules/dom-utils/lib/get-attributes.js","node_modules/dom-utils/lib/matches.js","node_modules/dom-utils/lib/parents.js","node_modules/dom-utils/lib/parse-url.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequire","obj","__esModule","supports","flexbox","div","document","createElement","className","innerHTML","body","insertBefore","firstChild","./analytics","./supports","2","autotrack/lib/plugins/clean-url-tracker","autotrack/lib/plugins/event-tracker","autotrack/lib/plugins/media-query-tracker","autotrack/lib/plugins/outbound-link-tracker","autotrack/lib/plugins/page-visibility-tracker","autotrack/lib/plugins/social-widget-tracker","3","style","4","DEV_ID","NULL_DIMENSION","5","CleanUrlTracker","tracker","opts","this","defaults","stripQuery","queryDimensionIndex","indexFilename","trailingSlash","overrideTrackerBuildHitTask","parseUrl","constants","provide","prototype","cleanUrlTask","model","location","get","page","url","oldPath","pathname","newPath","parts","split","join","replace","isFilename","test","substr","set","query","search","originalTrackerBuildHitTask","bind","remove","originalTrackerSendHitTask","../constants","../provide","../utilities","dom-utils/lib/parse-url","6","EventTracker","window","addEventListener","events","attributePrefix","fieldsObj","hitFilter","handleEvents","selector","delegates","forEach","event","delegate","deep","useCapture","getAttributes","camelCase","createFieldsObj","element","prefix","type","getAttribute","defaultFields","attributes","Object","keys","attribute","indexOf","value","field","slice","send","hitType","key","destroy","dom-utils/lib/delegate","dom-utils/lib/get-attributes","7","MediaQueryTracker","matchMedia","definitions","changeTemplate","changeTimeout","isObject","toArray","changeListeners","processMediaQueries","getMediaListener","media","mediaMap","debounce","definition","name","dimensionIndex","mediaName","getMatchName","addChangeListeners","match","items","item","matches","mql","fn","handleChanges","addListener","push","newValue","oldValue","eventCategory","eventAction","eventLabel","listener","removeListener","8","OutboundLinkTracker","linkSelector","shouldTrackOutboundLink","handleLinkClicks","link","navigator","sendBeacon","target","transport","href","hostname","protocol","9","PageVisibilityTracker","visibleMetricIndex","hiddenMetricIndex","sessionTimeout","DEFAULT_SESSION_TIMEOUT","visibilityState","lastVisibilityChangeTime","Date","handleVisibilityStateChange","overrideTrackerSendMethod","overrideTrackerSendHitTask","prevVisibilityState","sessionHasTimedOut","timeDeltaInSeconds","Math","round","eventValue","metric","minutesSinceLastHit","lastHitTime","originalTrackerSendMethod","args","Array","arguments","firstArg","isPageview","apply","removeEventListener","10","SocialWidgetTracker","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","readyState","FB","addFacebookEventHandlers","twttr","ready","err","removeTwitterEventHandlers","unbind","Event","subscribe","removeFacebookEventHandlers","unsubscribe","region","data","socialNetwork","socialAction","socialTarget","screenName","screen_name","11","utilities","gaDevIds","pluginName","pluginConstructor","gaAlias","gaplugins","capitalize","./constants","./utilities","12","assign","userFields","opt_tracker","opt_hitFilter","originalBuildHitTask","buildHitTask","withTimeout","callback","wait","called","setTimeout","overrides","result","hasOwnProperty","str","p1","toUpperCase","charAt","isArray","toString","object-assign","13","toObject","val","undefined","TypeError","shouldUseNative","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","test3","letter","propIsEnumerable","propertyIsEnumerable","source","from","symbols","to","getOwnPropertySymbols","14","now","getTime","15","func","immediate","later","last","timestamp","timeout","context","callNow","date-now","16","parents","shouldCheckSelf","nodeType","parent","parentElements","concat","./matches","./parents","17","closest","ancestor","eventType","deepPath","node","path","delegateTarget","./closest","18","attrs","attr","19","matchesSelector","nativeMatches","nodes","parentNode","querySelectorAll","proto","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","20","list","21","HTTP_PORT","HTTPS_PORT","cache","port","host","origin","hash","fragment"],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nrequire(\"./analytics\");\n\nvar supports = _interopRequire(require(\"./supports\"));\n\n// Add an `is-legacy` class on browsers that don't supports flexbox.\nif (!supports.flexbox()) {\n  var div = document.createElement(\"div\");\n  div.className = \"Error\";\n  div.innerHTML = \"Your browser does not support Flexbox.\\n                   Parts of this site may not appear as expected.\";\n\n  document.body.insertBefore(div, document.body.firstChild);\n}\n\n},{\"./analytics\":2,\"./supports\":3}],2:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"autotrack/lib/plugins/clean-url-tracker\");\n\nrequire(\"autotrack/lib/plugins/event-tracker\");\n\nrequire(\"autotrack/lib/plugins/media-query-tracker\");\n\nrequire(\"autotrack/lib/plugins/outbound-link-tracker\");\n\nrequire(\"autotrack/lib/plugins/page-visibility-tracker\");\n\nrequire(\"autotrack/lib/plugins/social-widget-tracker\");\n\n},{\"autotrack/lib/plugins/clean-url-tracker\":5,\"autotrack/lib/plugins/event-tracker\":6,\"autotrack/lib/plugins/media-query-tracker\":7,\"autotrack/lib/plugins/outbound-link-tracker\":8,\"autotrack/lib/plugins/page-visibility-tracker\":9,\"autotrack/lib/plugins/social-widget-tracker\":10}],3:[function(require,module,exports){\n\"use strict\";\n\nvar supports = {};\nvar style = document.body.style;\n\nmodule.exports = {\n  flexbox: function flexbox() {\n    return supports.flexbox || (supports.flexbox = \"flexBasis\" in style || \"msFlexAlign\" in style || \"webkitBoxDirection\" in style);\n  }\n};\n\n},{}],4:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  DEV_ID: 'i5iSjo',\n  NULL_DIMENSION: '(not set)'\n};\n\n},{}],5:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar defaults = require('../utilities').defaults;\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  this.opts = defaults(opts, {\n    stripQuery: true,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  });\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash === false) {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash === true) {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n\n},{\"../constants\":4,\"../provide\":11,\"../utilities\":12,\"dom-utils/lib/parse-url\":21}],6:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar delegate = require('dom-utils/lib/delegate');\nvar getAttributes = require('dom-utils/lib/get-attributes');\nvar provide = require('../provide');\nvar camelCase = require('../utilities').camelCase;\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar defaults = require('../utilities').defaults;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = defaults(opts, {\n    events: ['click'],\n    attributePrefix: 'ga-',\n    fieldsObj: null,\n    hitFilter: null\n  });\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {};\n  var attributes = getAttributes(element);\n\n  Object.keys(attributes).forEach(function(attribute) {\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      var value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      var field = camelCase(attribute.slice(prefix.length));\n      defaultFields[field] = value;\n    }\n  });\n\n  this.tracker.send(defaultFields.hitType || 'event', createFieldsObj(\n      defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n\n},{\"../provide\":11,\"../utilities\":12,\"dom-utils/lib/delegate\":17,\"dom-utils/lib/get-attributes\":18}],7:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar defaults = require('../utilities').defaults;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = defaults(opts, {\n    definitions: false,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: null,\n    hitFilter: null\n  });\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n},{\"../constants\":4,\"../provide\":11,\"../utilities\":12,\"debounce\":15}],8:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar defaults = require('../utilities').defaults;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = defaults(opts, {\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: null,\n    hitFilter: null\n  });\n\n  this.tracker = tracker;\n\n  this.delegate = delegate(document, 'click', this.opts.linkSelector,\n      this.handleLinkClicks.bind(this), {deep: true, useCapture: true});\n}\n\n\n/**\n * Handles all clicks on link elements. A link is considered an outbound link\n * its hostname property does not match location.hostname. When the beacon\n * transport method is not available, the links target is set to \"_blank\" to\n * ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkClicks = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: 'click',\n      eventLabel: link.href\n    };\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  this.delegate.destroy();\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n},{\"../provide\":11,\"../utilities\":12,\"dom-utils/lib/delegate\":17,\"dom-utils/lib/parse-url\":21}],9:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar defaults = require('../utilities').defaults;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = defaults(opts, {\n    visibleMetricIndex: null,\n    hiddenMetricIndex: null,\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    fieldsObj: null,\n    hitFilter: null\n  });\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000);\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n\n},{\"../provide\":11,\"../utilities\":12}],10:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar defaults = require('../utilities').defaults;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = defaults(opts, {\n    fieldsObj: null,\n    hitFilter: null\n  });\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n\n},{\"../provide\":11,\"../utilities\":12}],11:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n\n},{\"./constants\":4,\"./utilities\":12}],12:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker and hit\n   * filter and returns a single object that can be used in ga('send') commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(defaultFields, userFields,\n      opt_tracker, opt_hitFilter) {\n\n    if (!utilities.isObject(defaultFields)) defaultFields = {};\n    if (!utilities.isObject(userFields)) userFields = {};\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields);\n          model.set(userFields);\n          opt_hitFilter(model);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts an object of overrides and defaults and returns a new object\n   * with the values merged. For each key in defaults, if there's a\n   * corresponding value in overrides, it gets used.\n   * @param {Object} overrides The object with properties to override.\n   * @param {?Object} defaults The object with properties to use as defaults.\n   * @return {Object} The final, merged object.\n   */\n  defaults: function(overrides, defaults) {\n    var result = {};\n    if (!utilities.isObject(overrides)) overrides = {};\n    if (!utilities.isObject(defaults)) defaults = {};\n\n    for (var key in defaults) {\n      if (defaults.hasOwnProperty(key)) {\n        result[key] = overrides.hasOwnProperty(key) ?\n            overrides[key] : defaults[key];\n      }\n    }\n    return result;\n  },\n\n\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n\n},{\"object-assign\":13}],13:[function(require,module,exports){\n'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n},{}],14:[function(require,module,exports){\nmodule.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n\n},{}],15:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n\n},{\"date-now\":14}],16:[function(require,module,exports){\nvar matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n\n},{\"./matches\":19,\"./parents\":20}],17:[function(require,module,exports){\nvar closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.deep is true and the event originated from inside a Shadow DOM,\n    // check the deep nodes.\n    if (opts.deep && typeof event.deepPath == 'function') {\n      var path = event.deepPath();\n      for (var i = 0, node; node = path[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n\n},{\"./closest\":16,\"./matches\":19}],18:[function(require,module,exports){\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n\n},{}],19:[function(require,module,exports){\nvar proto = Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n\n},{}],20:[function(require,module,exports){\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n\n},{}],21:[function(require,module,exports){\nvar HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // To workaround this, we reparse with the full URL from the `href` property.\n  if (url.charAt(0) == '.') return parseUrl(a.href);\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // IE will return an empty string for host and hostname with a relative URL.\n  var host = a.host == '' ? location.host : a.host;\n  var hostname = a.hostname == '' ? location.hostname : a.hostname;\n\n  // Sometimes IE incorrectly includes a port (e.g. `:80` or `:443`)  even\n  // when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  host = host.replace(':' + (protocol == 'http:' ? HTTP_PORT : HTTPS_PORT), '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: hostname,\n    href: a.href,\n    origin: origin,\n\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n\n},{}]},{},[1])\n\n","import './analytics';\nimport supports from './supports';\n\n\n// Add an `is-legacy` class on browsers that don't supports flexbox.\nif (!supports.flexbox()) {\n  let div = document.createElement('div');\n  div.className = 'Error';\n  div.innerHTML = `Your browser does not support Flexbox.\n                   Parts of this site may not appear as expected.`;\n\n  document.body.insertBefore(div, document.body.firstChild);\n}\n","import 'autotrack/lib/plugins/clean-url-tracker';\nimport 'autotrack/lib/plugins/event-tracker';\nimport 'autotrack/lib/plugins/media-query-tracker';\nimport 'autotrack/lib/plugins/outbound-link-tracker';\nimport 'autotrack/lib/plugins/page-visibility-tracker';\nimport 'autotrack/lib/plugins/social-widget-tracker';\n","let supports = {};\nlet style = document.body.style;\n\nexport default {\n  flexbox: function() {\n    return supports.flexbox || (supports.flexbox = ('flexBasis' in style ||\n        'msFlexAlign' in style || 'webkitBoxDirection' in style));\n  }\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  DEV_ID: 'i5iSjo',\n  NULL_DIMENSION: '(not set)'\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar defaults = require('../utilities').defaults;\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  this.opts = defaults(opts, {\n    stripQuery: true,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  });\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash === false) {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash === true) {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar delegate = require('dom-utils/lib/delegate');\nvar getAttributes = require('dom-utils/lib/get-attributes');\nvar provide = require('../provide');\nvar camelCase = require('../utilities').camelCase;\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar defaults = require('../utilities').defaults;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = defaults(opts, {\n    events: ['click'],\n    attributePrefix: 'ga-',\n    fieldsObj: null,\n    hitFilter: null\n  });\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {};\n  var attributes = getAttributes(element);\n\n  Object.keys(attributes).forEach(function(attribute) {\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      var value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      var field = camelCase(attribute.slice(prefix.length));\n      defaultFields[field] = value;\n    }\n  });\n\n  this.tracker.send(defaultFields.hitType || 'event', createFieldsObj(\n      defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar defaults = require('../utilities').defaults;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = defaults(opts, {\n    definitions: false,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: null,\n    hitFilter: null\n  });\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar defaults = require('../utilities').defaults;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = defaults(opts, {\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: null,\n    hitFilter: null\n  });\n\n  this.tracker = tracker;\n\n  this.delegate = delegate(document, 'click', this.opts.linkSelector,\n      this.handleLinkClicks.bind(this), {deep: true, useCapture: true});\n}\n\n\n/**\n * Handles all clicks on link elements. A link is considered an outbound link\n * its hostname property does not match location.hostname. When the beacon\n * transport method is not available, the links target is set to \"_blank\" to\n * ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkClicks = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: 'click',\n      eventLabel: link.href\n    };\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  this.delegate.destroy();\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar defaults = require('../utilities').defaults;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = defaults(opts, {\n    visibleMetricIndex: null,\n    hiddenMetricIndex: null,\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    fieldsObj: null,\n    hitFilter: null\n  });\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000);\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar provide = require('../provide');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar defaults = require('../utilities').defaults;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = defaults(opts, {\n    fieldsObj: null,\n    hitFilter: null\n  });\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker and hit\n   * filter and returns a single object that can be used in ga('send') commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(defaultFields, userFields,\n      opt_tracker, opt_hitFilter) {\n\n    if (!utilities.isObject(defaultFields)) defaultFields = {};\n    if (!utilities.isObject(userFields)) userFields = {};\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields);\n          model.set(userFields);\n          opt_hitFilter(model);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts an object of overrides and defaults and returns a new object\n   * with the values merged. For each key in defaults, if there's a\n   * corresponding value in overrides, it gets used.\n   * @param {Object} overrides The object with properties to override.\n   * @param {?Object} defaults The object with properties to use as defaults.\n   * @return {Object} The final, merged object.\n   */\n  defaults: function(overrides, defaults) {\n    var result = {};\n    if (!utilities.isObject(overrides)) overrides = {};\n    if (!utilities.isObject(defaults)) defaults = {};\n\n    for (var key in defaults) {\n      if (defaults.hasOwnProperty(key)) {\n        result[key] = overrides.hasOwnProperty(key) ?\n            overrides[key] : defaults[key];\n      }\n    }\n    return result;\n  },\n\n\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n","\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n","var matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n","var closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.deep is true and the event originated from inside a Shadow DOM,\n    // check the deep nodes.\n    if (opts.deep && typeof event.deepPath == 'function') {\n      var path = event.deepPath();\n      for (var i = 0, node; node = path[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n","var proto = Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n","var HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // To workaround this, we reparse with the full URL from the `href` property.\n  if (url.charAt(0) == '.') return parseUrl(a.href);\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // IE will return an empty string for host and hostname with a relative URL.\n  var host = a.host == '' ? location.host : a.host;\n  var hostname = a.hostname == '' ? location.hostname : a.hostname;\n\n  // Sometimes IE incorrectly includes a port (e.g. `:80` or `:443`)  even\n  // when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  host = host.replace(':' + (protocol == 'http:' ? HTTP_PORT : HTTPS_PORT), '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: hostname,\n    href: a.href,\n    origin: origin,\n\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n"],"sourceRoot":"/source/"}