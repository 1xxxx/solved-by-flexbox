{"version":3,"sources":["node_modules/browser-pack/_prelude.js","main.js","assets/javascript/main.js","assets/javascript/analytics-storage.js","assets/javascript/analytics.js","assets/javascript/supports.js","node_modules/autotrack/lib/constants.js","node_modules/autotrack/lib/plugins/clean-url-tracker.js","node_modules/autotrack/lib/plugins/event-tracker.js","node_modules/autotrack/lib/plugins/media-query-tracker.js","node_modules/autotrack/lib/plugins/outbound-link-tracker.js","node_modules/autotrack/lib/plugins/page-visibility-tracker.js","node_modules/autotrack/lib/plugins/social-widget-tracker.js","node_modules/autotrack/lib/provide.js","node_modules/autotrack/lib/usage.js","node_modules/autotrack/lib/utilities.js","node_modules/autotrack/node_modules/object-assign/index.js","node_modules/date-now/index.js","node_modules/debounce/index.js","node_modules/dom-utils/lib/closest.js","node_modules/dom-utils/lib/delegate.js","node_modules/dom-utils/lib/get-attributes.js","node_modules/dom-utils/lib/matches.js","node_modules/dom-utils/lib/parents.js","node_modules/dom-utils/lib/parse-url.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequire","obj","__esModule","supports","flexbox","div","document","createElement","className","innerHTML","body","insertBefore","firstChild","./analytics","./supports","2","getStoredData","data","undefined","JSON","parse","window","localStorage","getItem","GA_LOCAL_STORAGE_KEY","err","trackers","getStoredTrackerData","name","setStoredData","setItem","stringify","setStoredTrackerData","trackerData","Object","defineProperty","value","3","createTrackers","fields","siteSpeedSampleRate","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","PROD_TRACKERS","Symbol","iterator","next","done","tracker","ga","trackingId","getAll","clientId","get","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","TEST_TRACKERS","_tracker","storage","trackErrors","errorQueue","onerror","q","msg","file","line","col","error","gaAll","eventCategory","eventAction","eventLabel","stack","apply","_toConsumableArray","setDefaultDimensionValues","keys","dimensions","forEach","key","NULL_VALUE","requirePlugins","stripQuery","queryDimensionIndex","getDefinitionIndex","URL_QUERY_PARAMS","indexFilename","trailingSlash","gaProd","definitions","dimensionIndex","items","media","visibleMetricIndex","metrics","PAGE_VISIBLE","hiddenMetricIndex","PAGE_HIDDEN","fieldsObj","_defineProperty","nonInteraction","HIT_SOURCE","hitFilter","model","set","METRIC_VALUE","String","trackClientId","CLIENT_ID","initSessionControl","gaTest","originalBuildHitTask","originalSendHitTask","HIT_TYPE","HIT_UUID","uuid","PREVIOUS_HIT_INDEX","index","payload","PREVIOUS_HIT_PAYLOAD","now","Date","time","serializeHit","sendInitialPageview","createGaProxy","command","_len","arguments","args","Array","_key","getByName","concat","hitType","page","hitSource","hit","map","decodeURIComponent","join","definition","exec","shuffleArray","array","j","Math","floor","random","temp","arr","isArray","arr2","from","enumerable","configurable","writable","_analyticsStorage","ALL_TRACKERS","filter","_ref","test","BREAKPOINT","RESOLUTION","ORIENTATION","onload","b","toString","replace","./analytics-storage","autotrack/lib/plugins/clean-url-tracker","autotrack/lib/plugins/event-tracker","autotrack/lib/plugins/media-query-tracker","autotrack/lib/plugins/outbound-link-tracker","autotrack/lib/plugins/page-visibility-tracker","autotrack/lib/plugins/social-widget-tracker","4","style","5","VERSION","DEV_ID","VERSION_PARAM","USAGE_PARAM","NULL_DIMENSION","6","CleanUrlTracker","opts","usage","track","plugins","CLEAN_URL_TRACKER","this","assign","overrideTrackerBuildHitTask","parseUrl","constants","provide","prototype","cleanUrlTask","location","url","oldPath","pathname","newPath","parts","split","isFilename","substr","query","search","originalTrackerBuildHitTask","bind","remove","originalTrackerSendHitTask","../constants","../provide","../usage","dom-utils/lib/parse-url","object-assign","7","EventTracker","EVENT_TRACKER","addEventListener","events","attributePrefix","handleEvents","selector","delegates","event","delegate","deep","useCapture","createFieldsObj","getAttributeFields","element","prefix","type","getAttribute","defaultFields","transport","attributeFields","userFields","send","destroy","../utilities","dom-utils/lib/delegate","8","MediaQueryTracker","MEDIA_QUERY_TRACKER","matchMedia","changeTemplate","changeTimeout","isObject","toArray","changeListeners","processMediaQueries","getMediaListener","mediaMap","debounce","mediaName","getMatchName","addChangeListeners","match","item","matches","mql","fn","handleChanges","addListener","push","newValue","oldValue","listener","removeListener","9","OutboundLinkTracker","OUTBOUND_LINK_TRACKER","linkSelector","shouldTrackOutboundLink","handleLinkInteractions","link","navigator","sendBeacon","target","href","hostname","protocol","slice","10","PageVisibilityTracker","PAGE_VISIBILITY_TRACKER","sessionTimeout","DEFAULT_SESSION_TIMEOUT","visibilityState","lastVisibilityChangeTime","handleVisibilityStateChange","overrideTrackerSendMethod","overrideTrackerSendHitTask","prevVisibilityState","sessionHasTimedOut","timeDeltaInSeconds","round","eventValue","metric","minutesSinceLastHit","lastHitTime","originalTrackerSendMethod","firstArg","isPageview","removeEventListener","11","SocialWidgetTracker","SOCIAL_WIDGET_TRACKER","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","readyState","FB","addFacebookEventHandlers","twttr","ready","removeTwitterEventHandlers","unbind","Event","subscribe","removeFacebookEventHandlers","unsubscribe","region","socialNetwork","socialAction","socialTarget","screenName","screen_name","12","utilities","gaDevIds","pluginName","pluginConstructor","gaAlias","gaplugins","capitalize","./constants","./utilities","13","convertHexToBin","hex","parseInt","convertBinToHex","bin","padZeros","str","len","toAdd","flipBitOn","trackPlugin","pluginIndex","usageHex","usageBin","PLUGIN_COUNT","trackVersion","IMPRESSION_TRACKER","OUTBOUND_FORM_TRACKER","URL_CHANGE_TRACKER","plugin","14","getAttributes","opt_tracker","opt_hitFilter","opt_target","buildHitTask","attributes","attribute","indexOf","field","camelCase","domReady","callback","withTimeout","wait","called","setTimeout","p1","toUpperCase","charAt","dom-utils/lib/get-attributes","15","toObject","val","TypeError","shouldUseNative","test1","getOwnPropertyNames","test2","fromCharCode","order2","test3","letter","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","source","symbols","to","getOwnPropertySymbols","16","getTime","17","func","immediate","later","last","timestamp","timeout","result","context","callNow","date-now","18","parents","shouldCheckSelf","nodeType","parent","parentElements","./matches","./parents","19","closest","ancestor","eventType","deepPath","node","path","delegateTarget","./closest","20","attrs","attr","21","matchesSelector","nativeMatches","nodes","parentNode","querySelectorAll","proto","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","22","list","23","HTTP_PORT","HTTPS_PORT","DEFAULT_PORT","RegExp","cache","port","host","origin","hash","fragment"],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nrequire(\"./analytics\");\n\nvar supports = _interopRequire(require(\"./supports\"));\n\n// Add an `is-legacy` class on browsers that don't supports flexbox.\nif (!supports.flexbox()) {\n  var div = document.createElement(\"div\");\n  div.className = \"Error\";\n  div.innerHTML = \"Your browser does not support Flexbox.\\n                   Parts of this site may not appear as expected.\";\n\n  document.body.insertBefore(div, document.body.firstChild);\n}\n\n},{\"./analytics\":3,\"./supports\":4}],2:[function(require,module,exports){\n\n\n// Schema:\n// ---------------------\n// {\n//   clientId: String(),\n//   trackers: {\n//     [name]: {\n//       index: Number,\n//       time: Number,\n//       payload: String\n//     }\n//   }\n// }\n\n\"use strict\";\n\nexports.getStoredData = getStoredData;\nexports.getStoredTrackerData = getStoredTrackerData;\nexports.setStoredData = setStoredData;\nexports.setStoredTrackerData = setStoredTrackerData;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar GA_LOCAL_STORAGE_KEY = \"_ga\";\nfunction getStoredData() {\n  var data = undefined;\n  try {\n    data = JSON.parse(window.localStorage.getItem(GA_LOCAL_STORAGE_KEY));\n  } catch (err) {}\n  data = data || {};\n  data.trackers = data.trackers || {};\n  return data;\n}\n\nfunction getStoredTrackerData(name) {\n  var data = getStoredData();\n  return data.trackers[name] || {};\n}\n\nfunction setStoredData(data) {\n  try {\n    window.localStorage.setItem(GA_LOCAL_STORAGE_KEY, JSON.stringify(data));\n  } catch (err) {}\n}\n\nfunction setStoredTrackerData(name, trackerData) {\n  var data = getStoredData();\n  data.trackers[name] = trackerData;\n  setStoredData(data);\n}\n\n// Do nothing...\n\n// Do nothing...\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nvar _toConsumableArray = function (arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } };\n\nvar _defineProperty = function (obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); };\n\nrequire(\"autotrack/lib/plugins/clean-url-tracker\");\n\nrequire(\"autotrack/lib/plugins/event-tracker\");\n\nrequire(\"autotrack/lib/plugins/media-query-tracker\");\n\nrequire(\"autotrack/lib/plugins/outbound-link-tracker\");\n\nrequire(\"autotrack/lib/plugins/page-visibility-tracker\");\n\nrequire(\"autotrack/lib/plugins/social-widget-tracker\");\n\nvar _analyticsStorage = require(\"./analytics-storage\");\n\nvar getStoredData = _analyticsStorage.getStoredData;\nvar getStoredTrackerData = _analyticsStorage.getStoredTrackerData;\nvar setStoredData = _analyticsStorage.setStoredData;\nvar setStoredTrackerData = _analyticsStorage.setStoredTrackerData;\n\n/**\n * A global list of tracker object, randomized to ensure no one tracker\n * data is always sent first.\n */\nvar ALL_TRACKERS = shuffleArray([{ name: \"t0\", trackingId: \"UA-40829935-1\" }, { name: \"testing\", trackingId: \"UA-40829935-4\" }]);\nvar PROD_TRACKERS = ALL_TRACKERS.filter(function (_ref) {\n  var name = _ref.name;\n  return !/test/.test(name);\n});\nvar TEST_TRACKERS = ALL_TRACKERS.filter(function (_ref) {\n  var name = _ref.name;\n  return /test/.test(name);\n});\n\nvar NULL_VALUE = \"(not set)\";\n\nvar metrics = {\n  PAGE_VISIBLE: \"metric1\",\n  PAGE_HIDDEN: \"metric2\"\n};\n\nvar dimensions = {\n  BREAKPOINT: \"dimension1\",\n  RESOLUTION: \"dimension2\",\n  ORIENTATION: \"dimension3\",\n  HIT_SOURCE: \"dimension4\",\n  URL_QUERY_PARAMS: \"dimension5\",\n  METRIC_VALUE: \"dimension6\",\n  CLIENT_ID: \"dimension7\",\n  PREVIOUS_HIT_INDEX: \"dimension8\",\n  PREVIOUS_HIT_PAYLOAD: \"dimension9\",\n  HIT_TYPE: \"dimension10\",\n  HIT_UUID: \"dimension11\"\n};\n\n// The command queue proxies.\nvar gaAll = createGaProxy(ALL_TRACKERS);\nvar gaProd = createGaProxy(PROD_TRACKERS);\nvar gaTest = createGaProxy(TEST_TRACKERS);\n\n// Delays running any analytics until after the load event\n// to ensure beacons don't block resources.\nwindow.onload = function () {\n  createTrackers();\n  trackErrors();\n  setDefaultDimensionValues();\n  requirePlugins();\n  trackClientId();\n  initSessionControl();\n  sendInitialPageview();\n};\n\nfunction createTrackers() {\n  var fields = { siteSpeedSampleRate: 10 };\n  var data = getStoredData();\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = PROD_TRACKERS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var tracker = _step.value;\n\n      window.ga(\"create\", tracker.trackingId, \"auto\", tracker.name, fields);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  window.ga(function () {\n    var tracker = window.ga.getAll()[0];\n    data.clientId = tracker.get(\"clientId\") || data.clientId;\n    setStoredData(data);\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = TEST_TRACKERS[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var _tracker = _step2.value;\n\n        if (data.clientId) fields.clientId = data.clientId;\n        if (window.localStorage) fields.storage = \"none\";\n        window.ga(\"create\", _tracker.trackingId, \"auto\", _tracker.name, fields);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"]) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  });\n}\n\nfunction trackErrors() {\n  // Errors that have occurred prior to this script running are stored on\n  // the `q` property of the window.onerror function.\n  var errorQueue = window.onerror.q || [];\n\n  // Override the temp `onerror()` handler to now send hits to GA.\n  window.onerror = function (msg, file, line, col, error) {\n    gaAll(\"send\", \"event\", {\n      eventCategory: \"Script\",\n      eventAction: \"uncaught error\",\n      eventLabel: error ? error.stack : \"\" + msg + \"\\n\" + file + \":\" + line + \":\" + col\n    });\n  };\n\n  // Replay any stored errors in the queue.\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = errorQueue[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var error = _step.value;\n\n      window.onerror.apply(window, _toConsumableArray(error));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction setDefaultDimensionValues() {\n  Object.keys(dimensions).forEach(function (key) {\n    gaAll(\"set\", dimensions[key], NULL_VALUE);\n  });\n}\n\nfunction requirePlugins() {\n  gaAll(\"require\", \"cleanUrlTracker\", {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    indexFilename: \"index.html\",\n    trailingSlash: \"add\"\n  });\n  gaProd(\"require\", \"eventTracker\");\n  gaProd(\"require\", \"mediaQueryTracker\", {\n    definitions: [{\n      name: \"Breakpoint\",\n      dimensionIndex: 1,\n      items: [{ name: \"xs\", media: \"all\" }, { name: \"sm\", media: \"(min-width: 384px)\" }, { name: \"md\", media: \"(min-width: 576px)\" }, { name: \"lg\", media: \"(min-width: 768px)\" }]\n    }, {\n      name: \"Resolution\",\n      dimensionIndex: 2,\n      items: [{ name: \"1x\", media: \"all\" }, { name: \"1.5x\", media: \"(-webkit-min-device-pixel-ratio: 1.5), \" + \"(min-resolution: 144dpi)\" }, { name: \"2x\", media: \"(-webkit-min-device-pixel-ratio: 2), \" + \"(min-resolution: 192dpi)\" }]\n    }, {\n      name: \"Orientation\",\n      dimensionIndex: 3,\n      items: [{ name: \"landscape\", media: \"(orientation: landscape)\" }, { name: \"portrait\", media: \"(orientation: portrait)\" }]\n    }]\n  });\n  gaAll(\"require\", \"outboundLinkTracker\");\n  gaProd(\"require\", \"pageVisibilityTracker\", {\n    visibleMetricIndex: getDefinitionIndex(metrics.PAGE_VISIBLE),\n    hiddenMetricIndex: getDefinitionIndex(metrics.PAGE_HIDDEN),\n    fieldsObj: _defineProperty({\n      nonInteraction: null }, dimensions.HIT_SOURCE, \"pageVisibilityTracker\"),\n    hitFilter: function hitFilter(model) {\n      model.set(dimensions.METRIC_VALUE, String(model.get(\"eventValue\")), true);\n    }\n  });\n  gaProd(\"require\", \"socialWidgetTracker\");\n}\n\nfunction trackClientId() {\n  gaAll(function (tracker) {\n    var clientId = tracker.get(\"clientId\");\n    tracker.set(dimensions.CLIENT_ID, clientId);\n  });\n}\n\nfunction initSessionControl() {\n  gaTest(function (tracker) {\n    var originalBuildHitTask = tracker.get(\"buildHitTask\");\n    var originalSendHitTask = tracker.get(\"sendHitTask\");\n\n    tracker.set(\"buildHitTask\", function (model) {\n      var name = tracker.get(\"name\");\n      var trackerData = getStoredTrackerData(name);\n\n      model.set(dimensions.HIT_TYPE, model.get(\"hitType\"), true);\n      model.set(dimensions.HIT_UUID, uuid(), true);\n      model.set(dimensions.PREVIOUS_HIT_INDEX, String(trackerData.index || 0), true);\n\n      if (trackerData.payload) {\n        model.set(dimensions.PREVIOUS_HIT_PAYLOAD, trackerData.payload, true);\n      }\n\n      // if (hasSessionTimedOut()) { /* Do something... */ }\n\n      originalBuildHitTask(model);\n    });\n\n    tracker.set(\"sendHitTask\", function (model) {\n      var now = +new Date();\n      var name = tracker.get(\"name\");\n      var trackerData = getStoredTrackerData(name);\n      trackerData.index = (trackerData.index || 0) + 1;\n      trackerData.time = trackerData.time || now;\n      trackerData.payload = serializeHit(model);\n      setStoredTrackerData(name, trackerData);\n\n      originalSendHitTask(model);\n    });\n  });\n}\n\nfunction sendInitialPageview() {\n  gaAll(\"send\", \"pageview\", _defineProperty({}, dimensions.HIT_SOURCE, \"pageload\"));\n}\n\n/**\n * Creates a ga() proxy function that calls commands on all but the\n * excluded trackers.\n * @param {Array} trackers an array or objects containing the `name` and\n *     `trackingId` fields.\n * @return {Function} The proxied ga() function.\n */\nfunction createGaProxy(trackers) {\n  return function (command) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = trackers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        (function () {\n          var name = _step.value.name;\n\n          if (typeof command == \"function\") {\n            window.ga(function () {\n              command(window.ga.getByName(name));\n            });\n          } else {\n            window.ga.apply(window, [\"\" + name + \".\" + command].concat(args));\n          }\n        })();\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n}\n\nfunction serializeHit(model) {\n  var hitType = model.get(\"hitType\");\n  var page = model.get(\"page\");\n  var hitSource = model.get(dimensions.HIT_SOURCE);\n\n  var hit = { hitType: hitType, page: page };\n  if (hitSource && hitSource != NULL_VALUE) hit.hitSource = hitSource;\n\n  if (hit.hitType == \"event\") {\n    hit.eventCategory = model.get(\"eventCategory\");\n    hit.eventAction = model.get(\"eventAction\");\n    hit.eventLabel = model.get(\"eventLabel\");\n  }\n\n  return Object.keys(hit).map(function (key) {\n    return \"\" + key + \"=\" + decodeURIComponent(hit[key]);\n  }).join(\"&\");\n}\n\n// Accepts a custom dimension or metric and returns it's numerical index.\nfunction getDefinitionIndex(definition) {\n  return +/\\d+$/.exec(definition)[0];\n}\n\n/**\n * Randomize array element order in-place.\n * Using Durstenfeld shuffle algorithm.\n * http://goo.gl/91pjZs\n * @param {Array} array The input array.\n * @return {Array} The randomized array.\n */\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\nvar uuid = function b(a) {\n  return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([10000000] + -1000 + -4000 + -8000 + -100000000000).replace(/[018]/g, b);\n};\n/*eslint-enable */\n// Ensure all events are interactive.\n\n},{\"./analytics-storage\":2,\"autotrack/lib/plugins/clean-url-tracker\":6,\"autotrack/lib/plugins/event-tracker\":7,\"autotrack/lib/plugins/media-query-tracker\":8,\"autotrack/lib/plugins/outbound-link-tracker\":9,\"autotrack/lib/plugins/page-visibility-tracker\":10,\"autotrack/lib/plugins/social-widget-tracker\":11}],4:[function(require,module,exports){\n\"use strict\";\n\nvar supports = {};\nvar style = document.body.style;\n\nmodule.exports = {\n  flexbox: function flexbox() {\n    return supports.flexbox || (supports.flexbox = \"flexBasis\" in style || \"msFlexAlign\" in style || \"webkitBoxDirection\" in style);\n  }\n};\n\n},{}],5:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  VERSION: '1.0.0',\n  DEV_ID: 'i5iSjo',\n\n  VERSION_PARAM: '&_av',\n  USAGE_PARAM: '&_au',\n\n  NULL_DIMENSION: '(not set)'\n};\n\n},{}],6:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.CLEAN_URL_TRACKER);\n\n  this.opts = assign({\n    stripQuery: false,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash == 'remove') {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash == 'add') {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n\n},{\"../constants\":5,\"../provide\":12,\"../usage\":13,\"dom-utils/lib/parse-url\":23,\"object-assign\":15}],7:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.EVENT_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {transport: 'beacon'};\n  var attributeFields = getAttributeFields(element, prefix);\n  var userFields = assign({}, this.opts.fieldsObj, attributeFields);\n  var hitType = attributeFields.hitType || 'event';\n\n  this.tracker.send(hitType, createFieldsObj(\n      defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"dom-utils/lib/delegate\":19,\"object-assign\":15}],8:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.MEDIA_QUERY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = assign({\n    definitions: null,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n},{\"../constants\":5,\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"debounce\":17,\"object-assign\":15}],9:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.OUTBOUND_LINK_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n        this.handleLinkInteractions, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all interactions on link elements. A link is considered an outbound\n * link if its hostname property does not match location.hostname. When the\n * beacon transport method is not available, the links target is set to\n * \"_blank\" to ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkInteractions = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: event.type,\n      eventLabel: link.href\n    };\n\n    var userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(link, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"dom-utils/lib/delegate\":19,\"dom-utils/lib/parse-url\":23,\"object-assign\":15}],10:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.PAGE_VISIBILITY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    hiddenMetricIndex: null,\n    visibleMetricIndex: null,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    // Rounds the time up to the nearest second. If the rounded value is zero\n    // use 1 instead since unset metrics default to 0.\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000) || 1;\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // Changes to hidden are non interaction hits by default\n    if (this.visibilityState == 'hidden') defaultFields.nonInteraction = true;\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"object-assign\":15}],11:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.SOCIAL_WIDGET_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n\n},{\"../provide\":12,\"../usage\":13,\"../utilities\":14,\"object-assign\":15}],12:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n\n},{\"./constants\":5,\"./utilities\":14}],13:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9\n};\nvar PLUGIN_COUNT = 9;\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get(constants.USAGE_PARAM);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set(constants.USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set(constants.VERSION_PARAM, constants.VERSION);\n}\n\n\nmodule.exports = {\n  track: function(tracker, plugin) {\n    trackVersion(tracker);\n    trackPlugin(tracker, plugin);\n  },\n  plugins: plugins\n};\n\n},{\"./constants\":5}],14:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar getAttributes = require('dom-utils/lib/get-attributes');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker, hit\n   * filter, and target element and returns a single object that can be used in\n   * `ga('send', ...)` commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @param {Element} opt_target If the hit originated from an interaction\n   *     with a DOM element, hitFilter is invoked with that element as the\n   *     second argument.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(\n      defaultFields, userFields, opt_tracker, opt_hitFilter, opt_target) {\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields, null, true);\n          model.set(userFields, null, true);\n          opt_hitFilter(model, opt_target);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Retrieves the attributes from an DOM element and returns a fields object\n   * for all attributes matching the passed prefix string.\n   * @param {Element} element The DOM element to get attributes from.\n   * @param {string} prefix An attribute prefix. Only the attributes matching\n   *     the prefix will be returned on the fields object.\n   * @return {Object} An object of analytics.js fields and values\n   */\n  getAttributeFields: function(element, prefix) {\n    var attributes = getAttributes(element);\n    var attributeFields = {};\n\n    Object.keys(attributes).forEach(function(attribute) {\n\n      // The `on` prefix is used for event handling but isn't a field.\n      if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n\n        var value = attributes[attribute];\n\n        // Detects Boolean value strings.\n        if (value == 'true') value = true;\n        if (value == 'false') value = false;\n\n        var field = utilities.camelCase(attribute.slice(prefix.length));\n        attributeFields[field] = value;\n      }\n    });\n\n    return attributeFields;\n  },\n\n\n  domReady: function(callback) {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', function fn() {\n        document.removeEventListener('DOMContentLoaded', fn);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts a string containing hyphen or underscore word separators and\n   * converts it to camelCase.\n   * @param {string} str The string to camelCase.\n   * @return {string} The camelCased version of the string.\n   */\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n\n},{\"dom-utils/lib/get-attributes\":20,\"object-assign\":15}],15:[function(require,module,exports){\n'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n},{}],16:[function(require,module,exports){\nmodule.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n\n},{}],17:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n\n},{\"date-now\":16}],18:[function(require,module,exports){\nvar matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n\n},{\"./matches\":21,\"./parents\":22}],19:[function(require,module,exports){\nvar closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.deep is true and the event originated from inside a Shadow DOM,\n    // check the deep nodes.\n    if (opts.deep && typeof event.deepPath == 'function') {\n      var path = event.deepPath();\n      for (var i = 0, node; node = path[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n\n},{\"./closest\":18,\"./matches\":21}],20:[function(require,module,exports){\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n\n},{}],21:[function(require,module,exports){\nvar proto = Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n\n},{}],22:[function(require,module,exports){\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n\n},{}],23:[function(require,module,exports){\nvar HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // To workaround this, we reparse with the full URL from the `href` property.\n  if (url.charAt(0) == '.') return parseUrl(a.href);\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // IE will return an empty string for host and hostname with a relative URL.\n  var host = a.host == '' ? location.host : a.host;\n  var hostname = a.hostname == '' ? location.hostname : a.hostname;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  host = host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: hostname,\n    href: a.href,\n    origin: origin,\n\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n\n},{}]},{},[1])\n\n","import './analytics';\nimport supports from './supports';\n\n\n// Add an `is-legacy` class on browsers that don't supports flexbox.\nif (!supports.flexbox()) {\n  let div = document.createElement('div');\n  div.className = 'Error';\n  div.innerHTML = `Your browser does not support Flexbox.\n                   Parts of this site may not appear as expected.`;\n\n  document.body.insertBefore(div, document.body.firstChild);\n}\n","const GA_LOCAL_STORAGE_KEY = '_ga';\n\n\n// Schema:\n// ---------------------\n// {\n//   clientId: String(),\n//   trackers: {\n//     [name]: {\n//       index: Number,\n//       time: Number,\n//       payload: String\n//     }\n//   }\n// }\n\n\nexport function getStoredData() {\n  let data;\n  try {\n    data = JSON.parse(window.localStorage.getItem(GA_LOCAL_STORAGE_KEY));\n  } catch (err) {\n    // Do nothing...\n  }\n  data = data || {};\n  data.trackers = data.trackers || {};\n  return data;\n}\n\n\nexport function getStoredTrackerData(name) {\n  let data = getStoredData();\n  return data.trackers[name] || {};\n}\n\n\nexport function setStoredData(data) {\n  try {\n    window.localStorage.setItem(GA_LOCAL_STORAGE_KEY, JSON.stringify(data));\n  } catch(err) {\n    // Do nothing...\n  }\n}\n\n\nexport function setStoredTrackerData(name, trackerData) {\n  let data = getStoredData();\n  data.trackers[name] = trackerData;\n  setStoredData(data);\n}\n","import 'autotrack/lib/plugins/clean-url-tracker';\nimport 'autotrack/lib/plugins/event-tracker';\nimport 'autotrack/lib/plugins/media-query-tracker';\nimport 'autotrack/lib/plugins/outbound-link-tracker';\nimport 'autotrack/lib/plugins/page-visibility-tracker';\nimport 'autotrack/lib/plugins/social-widget-tracker';\n\n\nimport {\n  getStoredData,\n  getStoredTrackerData,\n  setStoredData,\n  setStoredTrackerData\n} from './analytics-storage';\n\n\n/**\n * A global list of tracker object, randomized to ensure no one tracker\n * data is always sent first.\n */\nconst ALL_TRACKERS = shuffleArray([\n  {name: 't0', trackingId: 'UA-40829935-1'},\n  {name: 'testing', trackingId: 'UA-40829935-4'}\n]);\nconst PROD_TRACKERS = ALL_TRACKERS.filter(({name}) => !/test/.test(name));\nconst TEST_TRACKERS = ALL_TRACKERS.filter(({name}) => /test/.test(name));\n\n\nconst NULL_VALUE = '(not set)';\n\n\nconst metrics = {\n  PAGE_VISIBLE: 'metric1',\n  PAGE_HIDDEN: 'metric2'\n};\n\n\nconst dimensions = {\n  BREAKPOINT: 'dimension1',\n  RESOLUTION: 'dimension2',\n  ORIENTATION: 'dimension3',\n  HIT_SOURCE: 'dimension4',\n  URL_QUERY_PARAMS: 'dimension5',\n  METRIC_VALUE: 'dimension6',\n  CLIENT_ID: 'dimension7',\n  PREVIOUS_HIT_INDEX: 'dimension8',\n  PREVIOUS_HIT_PAYLOAD: 'dimension9',\n  HIT_TYPE: 'dimension10',\n  HIT_UUID: 'dimension11'\n};\n\n\n// The command queue proxies.\nlet gaAll = createGaProxy(ALL_TRACKERS);\nlet gaProd = createGaProxy(PROD_TRACKERS);\nlet gaTest = createGaProxy(TEST_TRACKERS);\n\n\n// Delays running any analytics until after the load event\n// to ensure beacons don't block resources.\nwindow.onload = function() {\n  createTrackers();\n  trackErrors();\n  setDefaultDimensionValues();\n  requirePlugins();\n  trackClientId();\n  initSessionControl();\n  sendInitialPageview();\n};\n\n\nfunction createTrackers() {\n  let fields = {siteSpeedSampleRate: 10};\n  let data = getStoredData();\n  for (let tracker of PROD_TRACKERS) {\n    window.ga('create', tracker.trackingId, 'auto', tracker.name, fields);\n  }\n  window.ga(function() {\n    let tracker = window.ga.getAll()[0];\n    data.clientId = tracker.get('clientId') || data.clientId;\n    setStoredData(data);\n\n    for (let tracker of TEST_TRACKERS) {\n      if (data.clientId) fields.clientId = data.clientId;\n      if (window.localStorage) fields.storage = 'none';\n      window.ga('create', tracker.trackingId, 'auto', tracker.name, fields);\n    }\n  });\n}\n\n\nfunction trackErrors() {\n  // Errors that have occurred prior to this script running are stored on\n  // the `q` property of the window.onerror function.\n  let errorQueue = window.onerror.q || [];\n\n  // Override the temp `onerror()` handler to now send hits to GA.\n  window.onerror = function(msg, file, line, col, error) {\n    gaAll('send', 'event', {\n      eventCategory: 'Script',\n      eventAction: 'uncaught error',\n      eventLabel: error ? error.stack : `${msg}\\n${file}:${line}:${col}`\n    });\n  };\n\n  // Replay any stored errors in the queue.\n  for (let error of errorQueue) {\n    window.onerror(...error);\n  }\n}\n\n\nfunction setDefaultDimensionValues() {\n  Object.keys(dimensions).forEach((key) => {\n    gaAll('set', dimensions[key], NULL_VALUE);\n  });\n}\n\n\nfunction requirePlugins() {\n  gaAll('require', 'cleanUrlTracker', {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    indexFilename: 'index.html',\n    trailingSlash: 'add'\n  });\n  gaProd('require', 'eventTracker');\n  gaProd('require', 'mediaQueryTracker', {\n    definitions: [\n      {\n        name: 'Breakpoint',\n        dimensionIndex: 1,\n        items: [\n          {name: 'xs', media: 'all'},\n          {name: 'sm', media: '(min-width: 384px)'},\n          {name: 'md', media: '(min-width: 576px)'},\n          {name: 'lg', media: '(min-width: 768px)'}\n        ]\n      },\n      {\n        name: 'Resolution',\n        dimensionIndex: 2,\n        items: [\n          {name: '1x',   media: 'all'},\n          {name: '1.5x', media: '(-webkit-min-device-pixel-ratio: 1.5), ' +\n                                '(min-resolution: 144dpi)'},\n          {name: '2x',   media: '(-webkit-min-device-pixel-ratio: 2), ' +\n                                '(min-resolution: 192dpi)'},\n        ]\n      },\n      {\n        name: 'Orientation',\n        dimensionIndex: 3,\n        items: [\n          {name: 'landscape', media: '(orientation: landscape)'},\n          {name: 'portrait',  media: '(orientation: portrait)'}\n        ]\n      }\n    ]\n  });\n  gaAll('require', 'outboundLinkTracker');\n  gaProd('require', 'pageVisibilityTracker', {\n    visibleMetricIndex: getDefinitionIndex(metrics.PAGE_VISIBLE),\n    hiddenMetricIndex: getDefinitionIndex(metrics.PAGE_HIDDEN),\n    fieldsObj: {\n      nonInteraction: null, // Ensure all events are interactive.\n      [dimensions.HIT_SOURCE]: 'pageVisibilityTracker'\n    },\n    hitFilter: function(model) {\n      model.set(dimensions.METRIC_VALUE, String(model.get('eventValue')), true);\n    }\n  });\n  gaProd('require', 'socialWidgetTracker');\n}\n\n\nfunction trackClientId() {\n  gaAll(function(tracker) {\n    let clientId = tracker.get('clientId');\n    tracker.set(dimensions.CLIENT_ID, clientId);\n  });\n}\n\n\nfunction initSessionControl() {\n  gaTest(function(tracker) {\n    let originalBuildHitTask = tracker.get('buildHitTask');\n    let originalSendHitTask = tracker.get('sendHitTask');\n\n    tracker.set('buildHitTask', function(model) {\n      let name = tracker.get('name');\n      let trackerData = getStoredTrackerData(name);\n\n      model.set(dimensions.HIT_TYPE, model.get('hitType'), true);\n      model.set(dimensions.HIT_UUID, uuid(), true);\n      model.set(dimensions.PREVIOUS_HIT_INDEX,\n          String(trackerData.index || 0), true);\n\n      if (trackerData.payload) {\n        model.set(\n            dimensions.PREVIOUS_HIT_PAYLOAD, trackerData.payload, true);\n      }\n\n      // if (hasSessionTimedOut()) { /* Do something... */ }\n\n      originalBuildHitTask(model);\n    });\n\n    tracker.set('sendHitTask', function(model) {\n      let now = +new Date;\n      let name = tracker.get('name');\n      let trackerData = getStoredTrackerData(name);\n      trackerData.index = (trackerData.index || 0) + 1;\n      trackerData.time = trackerData.time || now;\n      trackerData.payload = serializeHit(model);\n      setStoredTrackerData(name, trackerData);\n\n      originalSendHitTask(model);\n    });\n\n  });\n}\n\n\nfunction sendInitialPageview() {\n  gaAll('send', 'pageview', {[dimensions.HIT_SOURCE]: 'pageload'});\n}\n\n\n/**\n * Creates a ga() proxy function that calls commands on all but the\n * excluded trackers.\n * @param {Array} trackers an array or objects containing the `name` and\n *     `trackingId` fields.\n * @return {Function} The proxied ga() function.\n */\nfunction createGaProxy(trackers) {\n  return function(command, ...args) {\n    for (let {name} of trackers) {\n      if (typeof command == 'function') {\n        window.ga(function() {\n          command(window.ga.getByName(name));\n        });\n      }\n      else {\n        window.ga(`${name}.${command}`, ...args);\n      }\n    }\n  };\n}\n\n\nfunction serializeHit(model) {\n  let hitType = model.get('hitType');\n  let page = model.get('page');\n  let hitSource = model.get(dimensions.HIT_SOURCE);\n\n  let hit = {hitType, page};\n  if (hitSource && hitSource != NULL_VALUE) hit.hitSource = hitSource;\n\n  if (hit.hitType == 'event') {\n    hit.eventCategory = model.get('eventCategory');\n    hit.eventAction = model.get('eventAction');\n    hit.eventLabel = model.get('eventLabel');\n  }\n\n  return Object.keys(hit)\n      .map((key) => `${key}=${decodeURIComponent(hit[key])}`).join('&');\n}\n\n\n// Accepts a custom dimension or metric and returns it's numerical index.\nfunction getDefinitionIndex(definition) {\n  return +/\\d+$/.exec(definition)[0];\n}\n\n\n/**\n * Randomize array element order in-place.\n * Using Durstenfeld shuffle algorithm.\n * http://goo.gl/91pjZs\n * @param {Array} array The input array.\n * @return {Array} The randomized array.\n */\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\nconst uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */","let supports = {};\nlet style = document.body.style;\n\nexport default {\n  flexbox: function() {\n    return supports.flexbox || (supports.flexbox = ('flexBasis' in style ||\n        'msFlexAlign' in style || 'webkitBoxDirection' in style));\n  }\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  VERSION: '1.0.0',\n  DEV_ID: 'i5iSjo',\n\n  VERSION_PARAM: '&_av',\n  USAGE_PARAM: '&_au',\n\n  NULL_DIMENSION: '(not set)'\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.CLEAN_URL_TRACKER);\n\n  this.opts = assign({\n    stripQuery: false,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash == 'remove') {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash == 'add') {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.EVENT_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {transport: 'beacon'};\n  var attributeFields = getAttributeFields(element, prefix);\n  var userFields = assign({}, this.opts.fieldsObj, attributeFields);\n  var hitType = attributeFields.hitType || 'event';\n\n  this.tracker.send(hitType, createFieldsObj(\n      defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.MEDIA_QUERY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = assign({\n    definitions: null,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.OUTBOUND_LINK_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n        this.handleLinkInteractions, {deep: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all interactions on link elements. A link is considered an outbound\n * link if its hostname property does not match location.hostname. When the\n * beacon transport method is not available, the links target is set to\n * \"_blank\" to ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkInteractions = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: event.type,\n      eventLabel: link.href\n    };\n\n    var userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(link, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.PAGE_VISIBILITY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    hiddenMetricIndex: null,\n    visibleMetricIndex: null,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    // Rounds the time up to the nearest second. If the rounded value is zero\n    // use 1 instead since unset metrics default to 0.\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000) || 1;\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // Changes to hidden are non interaction hits by default\n    if (this.visibilityState == 'hidden') defaultFields.nonInteraction = true;\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.SOCIAL_WIDGET_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9\n};\nvar PLUGIN_COUNT = 9;\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get(constants.USAGE_PARAM);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set(constants.USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set(constants.VERSION_PARAM, constants.VERSION);\n}\n\n\nmodule.exports = {\n  track: function(tracker, plugin) {\n    trackVersion(tracker);\n    trackPlugin(tracker, plugin);\n  },\n  plugins: plugins\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar getAttributes = require('dom-utils/lib/get-attributes');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker, hit\n   * filter, and target element and returns a single object that can be used in\n   * `ga('send', ...)` commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @param {Element} opt_target If the hit originated from an interaction\n   *     with a DOM element, hitFilter is invoked with that element as the\n   *     second argument.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(\n      defaultFields, userFields, opt_tracker, opt_hitFilter, opt_target) {\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields, null, true);\n          model.set(userFields, null, true);\n          opt_hitFilter(model, opt_target);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Retrieves the attributes from an DOM element and returns a fields object\n   * for all attributes matching the passed prefix string.\n   * @param {Element} element The DOM element to get attributes from.\n   * @param {string} prefix An attribute prefix. Only the attributes matching\n   *     the prefix will be returned on the fields object.\n   * @return {Object} An object of analytics.js fields and values\n   */\n  getAttributeFields: function(element, prefix) {\n    var attributes = getAttributes(element);\n    var attributeFields = {};\n\n    Object.keys(attributes).forEach(function(attribute) {\n\n      // The `on` prefix is used for event handling but isn't a field.\n      if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n\n        var value = attributes[attribute];\n\n        // Detects Boolean value strings.\n        if (value == 'true') value = true;\n        if (value == 'false') value = false;\n\n        var field = utilities.camelCase(attribute.slice(prefix.length));\n        attributeFields[field] = value;\n      }\n    });\n\n    return attributeFields;\n  },\n\n\n  domReady: function(callback) {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', function fn() {\n        document.removeEventListener('DOMContentLoaded', fn);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts a string containing hyphen or underscore word separators and\n   * converts it to camelCase.\n   * @param {string} str The string to camelCase.\n   * @return {string} The camelCased version of the string.\n   */\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n","\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n","var matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n","var closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.deep is true and the event originated from inside a Shadow DOM,\n    // check the deep nodes.\n    if (opts.deep && typeof event.deepPath == 'function') {\n      var path = event.deepPath();\n      for (var i = 0, node; node = path[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n","var proto = Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n","var HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // To workaround this, we reparse with the full URL from the `href` property.\n  if (url.charAt(0) == '.') return parseUrl(a.href);\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // IE will return an empty string for host and hostname with a relative URL.\n  var host = a.host == '' ? location.host : a.host;\n  var hostname = a.hostname == '' ? location.hostname : a.hostname;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  host = host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: hostname,\n    href: a.href,\n    origin: origin,\n\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n"],"sourceRoot":"/source/"}